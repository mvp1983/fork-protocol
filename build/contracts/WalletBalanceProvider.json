{
  "contractName": "WalletBalanceProvider",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract LendingPoolAddressesProvider",
          "name": "_provider",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getUserWalletBalances",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract LendingPoolAddressesProvider\",\"name\":\"_provider\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserWalletBalances\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aave, influenced by https://github.com/wbobeirne/eth-balance-checker/blob/master/contracts/BalanceChecker.sol\",\"details\":\"NOTE: THIS CONTRACT IS NOT USED WITHIN THE AAVE PROTOCOL. It's an accessory contract used to reduce the number of calls towards the blockchain from the Aave backend.*\",\"kind\":\"dev\",\"methods\":{\"balanceOf(address,address)\":{\"details\":\"Check the token balance of a wallet in a token contract Returns the balance of the token for user. Avoids possible errors: - return 0 on non-contract address*\"},\"getUserWalletBalances(address)\":{\"details\":\"provides balances of user wallet for all reserves available on the pool\"}},\"title\":\"WalletBalanceProvider contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Implements a logic of getting multiple tokens balance for one user address\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/misc/WalletBalanceProvider.sol\":\"WalletBalanceProvider\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"project:/contracts/configuration/AddressStorage.sol\":{\"keccak256\":\"0x01a62f0d9180a26f8937473969e656c1fb6e56d68ca1fbbbc1b1cbfa99a67ca7\",\"urls\":[\"bzz-raw://82d517155fb430510c76685175529da7aa57d2bdacc0397c94ec8d3d5cb5a526\",\"dweb:/ipfs/QmbzCraS5YxkLt4GU2ePw44PpRef4V5pWyV1rK6MiBJUTs\"]},\"project:/contracts/configuration/LendingPoolAddressesProvider.sol\":{\"keccak256\":\"0xd11b18365229e611695cd3933f956b3c48dc469079ee65fc14638dc6e94caec6\",\"urls\":[\"bzz-raw://7a21308db274ff22cf598e31ac9dff229266b537d119455d91e3cac2c7024259\",\"dweb:/ipfs/QmYgtAg2feq4xrfCEpNWji3MtCaJXkZ6MfkHRbeoKZrmqP\"]},\"project:/contracts/configuration/LendingPoolParametersProvider.sol\":{\"keccak256\":\"0x4a9e6a7a2f5249c36c71dac407bcbbbd59c60ce8496c4d8b16fd93e9e2feed3c\",\"urls\":[\"bzz-raw://37f5472e835bbc7874d7ca0366f5dc28055dec88dc50fab030906c5d2c3a4a90\",\"dweb:/ipfs/Qmd6sdpqLAe48UFUxqvuF9TwP1BPcHJj71VBeFkQMFPu2r\"]},\"project:/contracts/configuration/UintStorage.sol\":{\"keccak256\":\"0x123db479af2fbad56f686c872d03bc25b70941c1350408843dbb87ec70366d45\",\"urls\":[\"bzz-raw://14489458c6baf4a4adbf6387dd6d89af7de36aef75f7a8d020b27673c3bd9be0\",\"dweb:/ipfs/QmRKLRG9R4aTC8viAUZtJKVasNsaAEBHd64LUvBu7Q5T7F\"]},\"project:/contracts/flashloan/interfaces/IFlashLoanReceiver.sol\":{\"keccak256\":\"0x3b0ed008c0c0af90c7b48d2fc65a60fd2c6109e6644ad3789fdeb798986a2476\",\"urls\":[\"bzz-raw://0d5b7f27000f10e4062fb746a58704c55ed53aa64422a38300a1c08fd5ca2c6b\",\"dweb:/ipfs/QmXQkwUvYAwqHCHAnLLzDAt547VyjTTS2ux6Yvx7d2cUpH\"]},\"project:/contracts/interfaces/IFeeProvider.sol\":{\"keccak256\":\"0x20025e8c978bb5cf998aea0045217ccc017d68628052d1ecd3eba3f987464744\",\"urls\":[\"bzz-raw://3a038a40ec61914139e69f2172205ed9d3b34e016bd110e8f3bf003f3ff383ff\",\"dweb:/ipfs/QmPmUkaRD2gNEUEyFiKtdXXr53BqoMXjTjUs97raS6rbZP\"]},\"project:/contracts/interfaces/ILendingPoolAddressesProvider.sol\":{\"keccak256\":\"0xa6824af39e2b926aa3b9d8f8d0e2f1d5b0d630079a47a9cc4bcd77e586643ffd\",\"urls\":[\"bzz-raw://a9fe9f2682c4a08a01425bc52e1ec481a00b34988dfdc85a69a9b96701e58bc4\",\"dweb:/ipfs/QmeFzHMyD5gPc2eWMF6rHFimkZtKo3d4NwfxdpX96BuyRn\"]},\"project:/contracts/interfaces/ILendingRateOracle.sol\":{\"keccak256\":\"0x8d5c7b86a1fb78e607c134ab3f6daec9e9f91dd2732d22762889bcef6accb46e\",\"urls\":[\"bzz-raw://223348102b7e808d9ae6fbb7c93e896855db8f300f91b671ea328ba2e1980a25\",\"dweb:/ipfs/QmV2N4XEwqyMVLUP5LBWXJEBL7uBZ7vKLfxWAR9p6ENa6z\"]},\"project:/contracts/interfaces/IPriceOracleGetter.sol\":{\"keccak256\":\"0x4a4b0d54b56447db62550afbca0a1faa6724caa57683bde33f153ac7f5c6f868\",\"urls\":[\"bzz-raw://569d3f7ea0bea044be6f25fd3dc7527ed08aca30e0439e80ca307d5f98cb2e1f\",\"dweb:/ipfs/QmPQVFKQmRvq51QAHBWefV98YVYXX9xgq2nwKbhgJEoF7H\"]},\"project:/contracts/interfaces/IReserveInterestRateStrategy.sol\":{\"keccak256\":\"0x4be0fbb4dc507fbbf9d5b795edd457d6d1cc04b2259da0cf725ae1af52cc690c\",\"urls\":[\"bzz-raw://2312b108fa98a04e8c71f27a220b5d3ec8c8181825fb8a311a5dc2118abd2ca0\",\"dweb:/ipfs/QmRehAh9Zq5AKH7okGYWYq4rBLkCyFyo3vGeq16hxgSF6S\"]},\"project:/contracts/lendingpool/LendingPool.sol\":{\"keccak256\":\"0x8430b0da539b61f9a124de71bd41a8862693e8838d8b61223829f5cb6dea755e\",\"urls\":[\"bzz-raw://408d9887de9c628929b6914dab13f7f50d82797c8004dd15fb4c192afb5cb656\",\"dweb:/ipfs/QmZqLfhMXUbRKFeKXRpsyzWCKrGFibRZYvP9BPJLPQoVvP\"]},\"project:/contracts/lendingpool/LendingPoolCore.sol\":{\"keccak256\":\"0x41afaa39a91934313c32347588e2822903ec70d4b4474e67fa8946c03bf4c7e3\",\"urls\":[\"bzz-raw://d52c4d7ba3bc4880d913cd609ff8410f3d4cc357eba98c0ab39748e89bb6efa5\",\"dweb:/ipfs/QmUqXEttJcnuqUqEwPkcjQo62SQAcTtsZAp9hpV6cyenxM\"]},\"project:/contracts/lendingpool/LendingPoolDataProvider.sol\":{\"keccak256\":\"0x9e8be228c659df3a22c1b24ceee1f3c500a4e169200d26f552f805d57a520d41\",\"urls\":[\"bzz-raw://39e35555d494e2c8b538cc6d93a6292da51db981386df990296e37a0e2cd8c47\",\"dweb:/ipfs/QmbEkMUPJxDBFzUzP6WXiVLttCwQ9vmKGf9y7Zimjz715h\"]},\"project:/contracts/lendingpool/LendingPoolLiquidationManager.sol\":{\"keccak256\":\"0xe6182b4f2fffa879045c1ac495a047a613b0ebf90949fff7512d4c90dc0eb223\",\"urls\":[\"bzz-raw://aaa1abb4d5c00d370ad3996c61e0e13a1570c1aa472466109ff64c6d8c6f97de\",\"dweb:/ipfs/QmdAUV8M5MHLmY1QwqrxQbZT3F6UA5WryLMTwMphAcGHFg\"]},\"project:/contracts/libraries/CoreLibrary.sol\":{\"keccak256\":\"0xdc4106398d1602230febfa51514b26e4ef53fe76c7f3e2c30ce01a7c1c19eeef\",\"urls\":[\"bzz-raw://c8078869afbb5876b66336e37b306e15c5527803f6ec4a52c34b7a91bd2a43de\",\"dweb:/ipfs/QmfNsmMxX7ygQ1abMB9hQb9phfD2fwv5mrrA5hWDRJPDBF\"]},\"project:/contracts/libraries/EthAddressLib.sol\":{\"keccak256\":\"0xe7545dacf8a038b507c7d3acbc93929172cdeb256d9ed64b259118774d3dae32\",\"urls\":[\"bzz-raw://27a83026dd8cd3a67c2f91e320ec684a3fae92df73b0d9e79dcc87a3d536be39\",\"dweb:/ipfs/QmUFtgqzAareZoSoQkhcGmK32JzpGokvkgfzK71fnAPk1w\"]},\"project:/contracts/libraries/WadRayMath.sol\":{\"keccak256\":\"0xbe64af5220586a6dedad92271c3345caa3ab454c4bef503b32e2fafe73b8ed60\",\"urls\":[\"bzz-raw://5359cf4de1c5ac6458f2559e6a6137343b7fb87297f5e335238c9d0fb63a104e\",\"dweb:/ipfs/QmRScztGUmUD7sfWNanA8Mbbji2viFnywJkA5NbFQrMaqX\"]},\"project:/contracts/libraries/openzeppelin-upgradeability/BaseAdminUpgradeabilityProxy.sol\":{\"keccak256\":\"0x1b09170a1823d0c827aed11c4478858b1064d0b35b650f5bc9fa3486719b7abb\",\"urls\":[\"bzz-raw://2195115ec841f27abfcdbc3e8fa232300bde463d64ad9ec88f1b13a7ff59f90d\",\"dweb:/ipfs/QmZooDusYRHQmxeqffRhd42TomvL7FMZCC93opACYtZ8qg\"]},\"project:/contracts/libraries/openzeppelin-upgradeability/BaseUpgradeabilityProxy.sol\":{\"keccak256\":\"0xf200004a6699b534c4e47b0585a44ec4882b07931469aa0e3b5a863c610ca4b0\",\"urls\":[\"bzz-raw://67a250e161a80f00ccf93c82cf9d3345b4f30ff3f66ebaedd5f507ffe2034cd7\",\"dweb:/ipfs/QmXHzEYzmjJkY8JNbzq9k8rRa862eAJXrXNad3Ccxvf5f9\"]},\"project:/contracts/libraries/openzeppelin-upgradeability/InitializableAdminUpgradeabilityProxy.sol\":{\"keccak256\":\"0x0df5648780fbb5f16bfe4ad76c290fe7ae02a66eb9c2e05a9473dcce588ca108\",\"urls\":[\"bzz-raw://e4ab9b03bd7064ad876cfe66a25145f0c561bec7f22967339cb6a22af07626dd\",\"dweb:/ipfs/QmdaBe689TDGL54RzKj6vcpjmp5axLhsWhGyJtb4TNWJsV\"]},\"project:/contracts/libraries/openzeppelin-upgradeability/InitializableUpgradeabilityProxy.sol\":{\"keccak256\":\"0x12c588c0458d628ebe8aec2252e5dac1d9c1cf1e0ba8c7dc0a884744685086c5\",\"urls\":[\"bzz-raw://1e1aa6f5451630bc71b519a4f5ee600ce94fc875ce373e67419698fc365963b8\",\"dweb:/ipfs/QmYEAKyn336Q4C9VNDrEpezYYVY5osykRvWeaVwt66F4K2\"]},\"project:/contracts/libraries/openzeppelin-upgradeability/Proxy.sol\":{\"keccak256\":\"0x00c8bd0053e20a3f31d460c3ad5a125c67b684eb530661bef941da93fb62649a\",\"urls\":[\"bzz-raw://9e91e67934017b49562cd67b14a8cbedee9e45fa41f9aa760cb46004f2b11b7d\",\"dweb:/ipfs/QmXLLkKcm1xBfgxn86v1RuLv5VKAx3MVuMYznVMpMkidNz\"]},\"project:/contracts/libraries/openzeppelin-upgradeability/UpgradeabilityProxy.sol\":{\"keccak256\":\"0x3a9343c7ddaa8782d72b21720f10d5878e8d9b02f1c435e9dc2aa1d66b862de5\",\"urls\":[\"bzz-raw://bd549905126766d57a818f4240e60f0ea1795846e274c6006e348bba7e3f07ab\",\"dweb:/ipfs/QmZAbFy3T7mDUKnszH9d8BSW772wVxDtjBjpLdVdFCuZ4A\"]},\"project:/contracts/libraries/openzeppelin-upgradeability/VersionedInitializable.sol\":{\"keccak256\":\"0xb6e258cf3ef05a371fe1a178adb56af0cc81d72f29f28152b3d6ec3f4a30cc9e\",\"urls\":[\"bzz-raw://9999518960708c3aadc8ead740228d5193430a2798e9b877be30a4c0b95a6905\",\"dweb:/ipfs/Qmc27Bz6sVCceye882eaHMntMsc9gph3ZLSb6Q1CTY2ka2\"]},\"project:/contracts/misc/WalletBalanceProvider.sol\":{\"keccak256\":\"0x9da3e123dd7b796a3348e2661c3efd531706b10c0451eda50148455811cec88d\",\"urls\":[\"bzz-raw://8f48d5a527063b8e01c6a285faecae048aff2a44e0a12c60237dfb2a65e23736\",\"dweb:/ipfs/QmQFVejsy6hCLEYLMxduuspqsimAp2n7TsrdPSsdrgHM1G\"]},\"project:/contracts/tokenization/AToken.sol\":{\"keccak256\":\"0x346f7ebdc4272169f9423dcf3bf182d321dfb9ce85afe8dade1417f808face30\",\"urls\":[\"bzz-raw://7bbc5ef82e2bf79d20669679bb1071966acab3ea4a995aa9121560a57440a0c0\",\"dweb:/ipfs/QmeyGnZV7L5WqfdXn7SEjZRfNjNb7uLMHBgZoWixz697J9\"]},\"project:/lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xe889e9f6b8469155c967f403ad7508eaa66af8cad1cb9a003536a8e4f281d348\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e6e32c81c8d84199eda0de40d33bb77c7acbb482e3f545d5cfba8195af0a88e0\",\"dweb:/ipfs/Qmaf1WAinzjYWGNxRzCTmn2QABFWS912HwC8eiD7cyTgis\"]},\"project:/lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xbd56d5c2cdbeb156c65a1a929f5ea9be5af3bde54244c8d8dcd7eb560512ed7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc97f1f9f1a8162af5098a609cf9a62afc2856a042243ce274762709e223711b\",\"dweb:/ipfs/QmTA2uoKWE1HyVGmdnGC5YNLuSBaPbDJVmmfUvvoEVN7Zj\"]},\"project:/lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x198433113545cc855ffb34ec844854dd59e1b8420a97a876ce67eae3b3929c50\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d26179570c319b970030e366c034a27921c6de0e78bbe32ea34a1b30c08d24af\",\"dweb:/ipfs/QmTKRYXntXit6U2gwMhwKojhwpfhXkzWSLS1cy6DVEi6F9\"]},\"project:/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x1c15854d415493331ff06ef9b0899f81dc6960189fa86cfd1b29c4374cc336a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5cb41bc9b9e1f5617d8e826c07fb21ecf986f70b4b5b395d6ecf9c5eb9f1a204\",\"dweb:/ipfs/QmNvJhvpJE8b3nyz7RaMCSPhfbmzj1TLuL3a7NkS9AHkGJ\"]},\"project:/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8edf51e08ea403df2542380d8fba4a3fc63aa07c571ee75cf55e18d1e353645b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5878fafb7c542c7b0d3f9d34447177b54a7ffa5a388a23c4da78116655b7fba6\",\"dweb:/ipfs/Qmb8VVEhtoUAEGsDRKmo9ER23eQfAEynDxvEDTeVWfG1Wm\"]},\"project:/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x36560926db8fa096a799a54143e48ff23002e115d4a8380e31def8f8aab0efd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c289d6f0ededdbf5cf5f885adf2d41b76d6fe602946273cab10830f64906af9f\",\"dweb:/ipfs/Qmd81LQLGNmfs3rxwGLHUSJ2d3w5Z4aooxtRkCe7XDDEc8\"]},\"project:/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xcbb604d28d5f88a843c15f561334d36186f272d7099ae5daa859610871bd505e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb4a8d2d4884c7dd1917ba022867a3f37cfd88252bb0d8544eb46bfa3a1200af\",\"dweb:/ipfs/Qmdoauv9ffth9R63ZwSQ9HR9LAtVWGsEz8ByTB1eSsCMuL\"]},\"project:/lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x0e0796517afb4347534d93ede634036a1621b8486f06501847402357498c0726\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6a3961c19e2887a4fff4644e5284b53d1202e899e161b68771304bfc74bade6\",\"dweb:/ipfs/Qmb1Di8UfhT9QdBAPGiDBX8FYoR9tXd1YWUTUup8GGhg21\"]},\"project:/lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x3dcd533a3f709bda89bb8e649eb97aed96578e606f3796609544b1dcff975a0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://83fa9b15077fd2f33f6c175d694e2f7ae9c9a289c7feaca40aa7d6feb8d87c26\",\"dweb:/ipfs/QmQLfKCJ7mjiEeCGN1sHgWT8wjAMbAmBqcBVoQQyUZa5ws\"]},\"project:/lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x55c329217b55fc381f19a19007d6bcf279e3b58e9867d3e2b33f57fe8acb824b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ca5be47fdb89a89e69c8aee2eea7f27543009f95a46bb69bb65283afdaa327d\",\"dweb:/ipfs/QmVJjqVZsfQHEMRuJu6yaimvWooHu1fTW7xQwbc1gtKypw\"]}},\"version\":1}",
  "bytecode": "0x60803461007357601f6105a638819003918201601f19168301916001600160401b038311848410176100775780849260209460405283398101031261007357516001600160a01b03811690819003610073575f80546001600160a01b03191691909117905560405161051a908161008c8239f35b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe608060409080825260048036101561006d575b825162461bcd60e51b815260206004820152602e60248201527f57616c6c657442616c616e636550726f766964657220646f6573206e6f74206160448201526d6363657074207061796d656e747360901b6064820152608490fd5b5f3560e01c9182639e3c9309146100d557505063f7888aec14610091575f80610012565b346100d157806003193601126100d1576100a96103d5565b60243591906001600160a01b03831683036100d1576020926100ca91610461565b9051908152f35b5f80fd5b909150346100d157602090816003193601126100d1576100f36103d5565b5f5463076b7fbb60e51b835290916001600160a01b039184908290600490829086165afa801561026f5782915f9161039b575b508651630240bc6b60e21b81529691165f87600481845afa968715610391575f976102fa575b5086519461017161015c87610421565b96610169855198896103eb565b808852610421565b8682019790601f19013689375f5b89518110156102795785610193828c610439565b518651630283aeb760e11b8152911683820152908382602481885afa801561026f575f90610236575b600192501561022b5780878c73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee826101e88584610439565b51161461021657610204926101fc91610439565b511689610461565b61020e828b610439565b525b0161017f565b5050508731610225828b610439565b52610210565b5f610225828b610439565b50908381813d8311610268575b61024d81836103eb565b810103126100d157519081151582036100d1576001916101bc565b503d610243565b86513d5f823e3d90fd5b85858a858d8c8451958587968701908752835180915284606088019401915f905b8282106102dd5750505050848203858401525180825290820192915f5b8281106102c657505050500390f35b8351855286955093810193928101926001016102b7565b83518116865289985094860194928601926001919091019061029a565b9096503d805f833e61030c81836103eb565b81019085818303126100d15780519067ffffffffffffffff82116100d157019080601f830112156100d157815161034281610421565b9261034f855194856103eb565b818452878085019260051b8201019283116100d1578701905b82821061037957505050955f61014c565b815186811681036100d1578152908701908701610368565b82513d5f823e3d90fd5b809250858092503d83116103ce575b6103b481836103eb565b810103126100d1575181811681036100d15781905f610126565b503d6103aa565b600435906001600160a01b03821682036100d157565b90601f8019910116810190811067ffffffffffffffff82111761040d57604052565b634e487b7160e01b5f52604160045260245ffd5b67ffffffffffffffff811161040d5760051b60200190565b805182101561044d5760209160051b010190565b634e487b7160e01b5f52603260045260245ffd5b813b156104de576040516370a0823160e01b81526001600160a01b0391821660048201529160209183916024918391165afa9081156104d3575f916104a4575090565b90506020813d6020116104cb575b816104bf602093836103eb565b810103126100d1575190565b3d91506104b2565b6040513d5f823e3d90fd5b50505f9056fea2646970667358221220cc6cb062675c22dd569ba4155e9b258790fa25ba47eab76402145e55c753d4c564736f6c63430008180033",
  "deployedBytecode": "0x608060409080825260048036101561006d575b825162461bcd60e51b815260206004820152602e60248201527f57616c6c657442616c616e636550726f766964657220646f6573206e6f74206160448201526d6363657074207061796d656e747360901b6064820152608490fd5b5f3560e01c9182639e3c9309146100d557505063f7888aec14610091575f80610012565b346100d157806003193601126100d1576100a96103d5565b60243591906001600160a01b03831683036100d1576020926100ca91610461565b9051908152f35b5f80fd5b909150346100d157602090816003193601126100d1576100f36103d5565b5f5463076b7fbb60e51b835290916001600160a01b039184908290600490829086165afa801561026f5782915f9161039b575b508651630240bc6b60e21b81529691165f87600481845afa968715610391575f976102fa575b5086519461017161015c87610421565b96610169855198896103eb565b808852610421565b8682019790601f19013689375f5b89518110156102795785610193828c610439565b518651630283aeb760e11b8152911683820152908382602481885afa801561026f575f90610236575b600192501561022b5780878c73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee826101e88584610439565b51161461021657610204926101fc91610439565b511689610461565b61020e828b610439565b525b0161017f565b5050508731610225828b610439565b52610210565b5f610225828b610439565b50908381813d8311610268575b61024d81836103eb565b810103126100d157519081151582036100d1576001916101bc565b503d610243565b86513d5f823e3d90fd5b85858a858d8c8451958587968701908752835180915284606088019401915f905b8282106102dd5750505050848203858401525180825290820192915f5b8281106102c657505050500390f35b8351855286955093810193928101926001016102b7565b83518116865289985094860194928601926001919091019061029a565b9096503d805f833e61030c81836103eb565b81019085818303126100d15780519067ffffffffffffffff82116100d157019080601f830112156100d157815161034281610421565b9261034f855194856103eb565b818452878085019260051b8201019283116100d1578701905b82821061037957505050955f61014c565b815186811681036100d1578152908701908701610368565b82513d5f823e3d90fd5b809250858092503d83116103ce575b6103b481836103eb565b810103126100d1575181811681036100d15781905f610126565b503d6103aa565b600435906001600160a01b03821682036100d157565b90601f8019910116810190811067ffffffffffffffff82111761040d57604052565b634e487b7160e01b5f52604160045260245ffd5b67ffffffffffffffff811161040d5760051b60200190565b805182101561044d5760209160051b010190565b634e487b7160e01b5f52603260045260245ffd5b813b156104de576040516370a0823160e01b81526001600160a01b0391821660048201529160209183916024918391165afa9081156104d3575f916104a4575090565b90506020813d6020116104cb575b816104bf602093836103eb565b810103126100d1575190565b3d91506104b2565b6040513d5f823e3d90fd5b50505f9056fea2646970667358221220cc6cb062675c22dd569ba4155e9b258790fa25ba47eab76402145e55c753d4c564736f6c63430008180033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "767:1781:36:-:0;;;;;;;;;;;;;-1:-1:-1;;767:1781:36;;;;-1:-1:-1;;;;;767:1781:36;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;767:1781:36;;;;;;;;-1:-1:-1;767:1781:36;;-1:-1:-1;;;;;;767:1781:36;;;;;;;;;;;;;;;;;-1:-1:-1;767:1781:36;;;;;;-1:-1:-1;767:1781:36;;;;;-1:-1:-1;767:1781:36",
  "deployedSourceMap": "767:1781:36:-:0;;;;;;;;;;;;;-1:-1:-1;767:1781:36;;-1:-1:-1;;;1095:56:36;;767:1781;;1095:56;;767:1781;;;;;;;;;;;-1:-1:-1;;;767:1781:36;;;;;;1095:56;767:1781;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;767:1781:36;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;1913:29:36;;767:1781;;-1:-1:-1;;;;;767:1781:36;;;;;;;;;;;1913:29;;;;;;;;767:1781;1913:29;;;767:1781;-1:-1:-1;767:1781:36;;-1:-1:-1;;;1984:18:36;;767:1781;;;;;;;;1984:18;;;;;;;767:1781;1984:18;;;767:1781;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;-1:-1:-1;;767:1781:36;;;;;2127:3;767:1781;;2106:19;;;;;2175:11;;;;;:::i;:::-;767:1781;;;-1:-1:-1;;;2151:36:36;;767:1781;;2151:36;;;767:1781;;2151:36;767:1781;;;2151:36;;;;;;;767:1781;2151:36;;;2127:3;767:1781;2150:37;;;2147:118;;2283:11;;;264:42:23;2283:11:36;;;;;:::i;:::-;767:1781;;2283:41;264:42:23;;2359:29:36;2376:11;;;;:::i;:::-;767:1781;;2359:29;;:::i;:::-;2345:43;;;;:::i;:::-;767:1781;2279:208;767:1781;2091:13;;2279:208;2443:13;;;;;2429:27;;;;:::i;:::-;767:1781;2279:208;;2147:118;767:1781;2207:15;;;;:::i;2151:36::-;;;;;;;;;;;;;;;;:::i;:::-;;;767:1781;;;;;;;;;;;;;;2151:36;;;;;;;;;767:1781;;;;;;;;;2106:19;;;;;;;767:1781;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;767:1781:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;767:1781:36;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;767:1781:36;;;;;;;;;;;;;;;;1984:18;;;;;;767:1781;1984:18;;;;;;:::i;:::-;;;767:1781;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;1984:18;;;;;;;767:1781;;;;;;;;;;;;;;;;;;;;1984:18;767:1781;;;;;;;;;1913:29;;;;;;;;;;;;;;;;;;:::i;:::-;;;767:1781;;;;;;;;;;;;1913:29;;;;;;;;;;767:1781;;;;-1:-1:-1;;;;;767:1781:36;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;1367:282;1512:18;;:22;:18;;767:1781;;-1:-1:-1;;;1558:31:36;;-1:-1:-1;;;;;767:1781:36;;;1558:31;;;767:1781;;1558:31;;767:1781;;;;;;;1558:31;;;;;;;1533:1;1558:31;;;1551:38;;:::o;1558:31::-;;;;;;;;;;;;;;;;;:::i;:::-;;;767:1781;;;;;1551:38;:::o;1558:31::-;;;-1:-1:-1;1558:31:36;;;767:1781;;;1533:1;767:1781;;;;;1508:134;1622:8;;1533:1;1622:8;:::o",
  "source": "pragma solidity ^0.8.24;\r\n\r\nimport \"../../lib/openzeppelin-contracts/contracts/utils/Address.sol\";\r\nimport \"../../lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\";\r\n\r\nimport \"../configuration/LendingPoolAddressesProvider.sol\";\r\nimport \"../lendingpool/LendingPoolCore.sol\";\r\nimport \"../libraries/EthAddressLib.sol\";\r\n\r\n\r\n/**\r\n* @title WalletBalanceProvider contract\r\n* @author Aave, influenced by https://github.com/wbobeirne/eth-balance-checker/blob/master/contracts/BalanceChecker.sol\r\n* @notice Implements a logic of getting multiple tokens balance for one user address\r\n* @dev NOTE: THIS CONTRACT IS NOT USED WITHIN THE AAVE PROTOCOL. It's an accessory contract used to reduce the number of calls\r\n* towards the blockchain from the Aave backend.\r\n**/\r\ncontract WalletBalanceProvider {\r\n\r\n    using Address for address;\r\n\r\n    LendingPoolAddressesProvider provider;\r\n\r\n    constructor(LendingPoolAddressesProvider _provider) {\r\n\r\n        provider = _provider;\r\n\r\n    }\r\n    /**\r\n    @dev Fallback function, don't accept any ETH\r\n    **/\r\n    fallback() external payable {\r\n        revert(\"WalletBalanceProvider does not accept payments\");\r\n    }\r\n\r\n    /**\r\n    @dev Check the token balance of a wallet in a token contract\r\n\r\n    Returns the balance of the token for user. Avoids possible errors:\r\n      - return 0 on non-contract address\r\n    **/\r\n    function balanceOf(address _user, address _token) public view returns (uint256) {\r\n        // check if token is actually a contract\r\n        if (_token.code.length > 0) {\r\n            return IERC20(_token).balanceOf(_user);\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n    @dev provides balances of user wallet for all reserves available on the pool\r\n    */\r\n    function getUserWalletBalances(address _user) public view returns (address[] memory, uint256[] memory) {\r\n\r\n        LendingPoolCore core = LendingPoolCore(provider.getLendingPoolCore());\r\n\r\n        address[] memory reserves = core.getReserves();\r\n\r\n        uint256[] memory balances = new uint256[](reserves.length);\r\n\r\n        for (uint256 j = 0; j < reserves.length; j++) {\r\n            if(!core.getReserveIsActive(reserves[j])){\r\n                balances[j] = 0;\r\n                continue;\r\n            }\r\n            if (reserves[j] != EthAddressLib.ethAddress()) {\r\n                balances[j] = balanceOf(_user, reserves[j]);\r\n            } else {\r\n                balances[j] = _user.balance; // ETH balance\r\n            }\r\n        }\r\n\r\n        return (reserves, balances);\r\n    }\r\n}",
  "sourcePath": "C:\\Proj\\fork-protocol\\contracts\\misc\\WalletBalanceProvider.sol",
  "ast": {
    "absolutePath": "project:/contracts/misc/WalletBalanceProvider.sol",
    "exportedSymbols": {
      "AToken": [
        13723
      ],
      "Address": [
        15206
      ],
      "AddressStorage": [
        32
      ],
      "BaseAdminUpgradeabilityProxy": [
        10852
      ],
      "BaseUpgradeabilityProxy": [
        10918
      ],
      "Context": [
        15236
      ],
      "CoreLibrary": [
        10465
      ],
      "ERC20": [
        14523
      ],
      "EthAddressLib": [
        10477
      ],
      "IERC20": [
        14601
      ],
      "IERC20Errors": [
        13913
      ],
      "IERC20Metadata": [
        14627
      ],
      "IERC20Permit": [
        14663
      ],
      "IFeeProvider": [
        1403
      ],
      "IFlashLoanReceiver": [
        1340
      ],
      "ILendingPoolAddressesProvider": [
        1593
      ],
      "ILendingRateOracle": [
        1613
      ],
      "IPriceOracleGetter": [
        1640
      ],
      "IReserveInterestRateStrategy": [
        1670
      ],
      "InitializableAdminUpgradeabilityProxy": [
        11044
      ],
      "InitializableUpgradeabilityProxy": [
        11107
      ],
      "LendingPool": [
        3735
      ],
      "LendingPoolAddressesProvider": [
        577
      ],
      "LendingPoolCore": [
        8023
      ],
      "LendingPoolDataProvider": [
        9062
      ],
      "LendingPoolLiquidationManager": [
        9696
      ],
      "LendingPoolParametersProvider": [
        652
      ],
      "Ownable": [
        13871
      ],
      "Proxy": [
        11143
      ],
      "ReentrancyGuard": [
        15305
      ],
      "SafeERC20": [
        14953
      ],
      "UintStorage": [
        685
      ],
      "UpgradeabilityProxy": [
        11196
      ],
      "VersionedInitializable": [
        11277
      ],
      "WadRayMath": [
        10644
      ],
      "WalletBalanceProvider": [
        11758
      ]
    },
    "id": 11759,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 11593,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:36"
      },
      {
        "absolutePath": "project:/lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "file": "../../lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "id": 11594,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 11759,
        "sourceUnit": 15207,
        "src": "28:70:36",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "../../lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "id": 11595,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 11759,
        "sourceUnit": 14602,
        "src": "100:75:36",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/configuration/LendingPoolAddressesProvider.sol",
        "file": "../configuration/LendingPoolAddressesProvider.sol",
        "id": 11596,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 11759,
        "sourceUnit": 578,
        "src": "179:59:36",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/lendingpool/LendingPoolCore.sol",
        "file": "../lendingpool/LendingPoolCore.sol",
        "id": 11597,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 11759,
        "sourceUnit": 8024,
        "src": "240:44:36",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/libraries/EthAddressLib.sol",
        "file": "../libraries/EthAddressLib.sol",
        "id": 11598,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 11759,
        "sourceUnit": 10478,
        "src": "286:40:36",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "WalletBalanceProvider",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 11599,
          "nodeType": "StructuredDocumentation",
          "src": "332:433:36",
          "text": " @title WalletBalanceProvider contract\n @author Aave, influenced by https://github.com/wbobeirne/eth-balance-checker/blob/master/contracts/BalanceChecker.sol\n @notice Implements a logic of getting multiple tokens balance for one user address\n @dev NOTE: THIS CONTRACT IS NOT USED WITHIN THE AAVE PROTOCOL. It's an accessory contract used to reduce the number of calls\n towards the blockchain from the Aave backend.*"
        },
        "fullyImplemented": true,
        "id": 11758,
        "linearizedBaseContracts": [
          11758
        ],
        "name": "WalletBalanceProvider",
        "nameLocation": "776:21:36",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 11602,
            "libraryName": {
              "id": 11600,
              "name": "Address",
              "nameLocations": [
                "813:7:36"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 15206,
              "src": "813:7:36"
            },
            "nodeType": "UsingForDirective",
            "src": "807:26:36",
            "typeName": {
              "id": 11601,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "825:7:36",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            }
          },
          {
            "constant": false,
            "id": 11605,
            "mutability": "mutable",
            "name": "provider",
            "nameLocation": "870:8:36",
            "nodeType": "VariableDeclaration",
            "scope": 11758,
            "src": "841:37:36",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_LendingPoolAddressesProvider_$577",
              "typeString": "contract LendingPoolAddressesProvider"
            },
            "typeName": {
              "id": 11604,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 11603,
                "name": "LendingPoolAddressesProvider",
                "nameLocations": [
                  "841:28:36"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 577,
                "src": "841:28:36"
              },
              "referencedDeclaration": 577,
              "src": "841:28:36",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LendingPoolAddressesProvider_$577",
                "typeString": "contract LendingPoolAddressesProvider"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 11615,
              "nodeType": "Block",
              "src": "939:43:36",
              "statements": [
                {
                  "expression": {
                    "id": 11613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11611,
                      "name": "provider",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11605,
                      "src": "952:8:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LendingPoolAddressesProvider_$577",
                        "typeString": "contract LendingPoolAddressesProvider"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11612,
                      "name": "_provider",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11608,
                      "src": "963:9:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LendingPoolAddressesProvider_$577",
                        "typeString": "contract LendingPoolAddressesProvider"
                      }
                    },
                    "src": "952:20:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LendingPoolAddressesProvider_$577",
                      "typeString": "contract LendingPoolAddressesProvider"
                    }
                  },
                  "id": 11614,
                  "nodeType": "ExpressionStatement",
                  "src": "952:20:36"
                }
              ]
            },
            "id": 11616,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11609,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11608,
                  "mutability": "mutable",
                  "name": "_provider",
                  "nameLocation": "928:9:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 11616,
                  "src": "899:38:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_LendingPoolAddressesProvider_$577",
                    "typeString": "contract LendingPoolAddressesProvider"
                  },
                  "typeName": {
                    "id": 11607,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 11606,
                      "name": "LendingPoolAddressesProvider",
                      "nameLocations": [
                        "899:28:36"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 577,
                      "src": "899:28:36"
                    },
                    "referencedDeclaration": 577,
                    "src": "899:28:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LendingPoolAddressesProvider_$577",
                      "typeString": "contract LendingPoolAddressesProvider"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "898:40:36"
            },
            "returnParameters": {
              "id": 11610,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "939:0:36"
            },
            "scope": 11758,
            "src": "887:95:36",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11624,
              "nodeType": "Block",
              "src": "1084:75:36",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "57616c6c657442616c616e636550726f766964657220646f6573206e6f7420616363657074207061796d656e7473",
                        "id": 11621,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1102:48:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_280c41bb8c1f7e09048b5cede0ca45bf41459598df6520c48a3b75dc7dc5acb9",
                          "typeString": "literal_string \"WalletBalanceProvider does not accept payments\""
                        },
                        "value": "WalletBalanceProvider does not accept payments"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_280c41bb8c1f7e09048b5cede0ca45bf41459598df6520c48a3b75dc7dc5acb9",
                          "typeString": "literal_string \"WalletBalanceProvider does not accept payments\""
                        }
                      ],
                      "id": 11620,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967277,
                        4294967277
                      ],
                      "referencedDeclaration": 4294967277,
                      "src": "1095:6:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 11622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1095:56:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11623,
                  "nodeType": "ExpressionStatement",
                  "src": "1095:56:36"
                }
              ]
            },
            "documentation": {
              "id": 11617,
              "nodeType": "StructuredDocumentation",
              "src": "988:62:36",
              "text": "@dev Fallback function, don't accept any ETH*"
            },
            "id": 11625,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11618,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1064:2:36"
            },
            "returnParameters": {
              "id": 11619,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1084:0:36"
            },
            "scope": 11758,
            "src": "1056:103:36",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 11652,
              "nodeType": "Block",
              "src": "1447:202:36",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 11639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "expression": {
                          "id": 11635,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11630,
                          "src": "1512:6:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 11636,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1519:4:36",
                        "memberName": "code",
                        "nodeType": "MemberAccess",
                        "src": "1512:11:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 11637,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1524:6:36",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1512:18:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 11638,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1533:1:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1512:22:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 11650,
                    "nodeType": "Block",
                    "src": "1607:35:36",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 11648,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1629:1:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 11634,
                        "id": 11649,
                        "nodeType": "Return",
                        "src": "1622:8:36"
                      }
                    ]
                  },
                  "id": 11651,
                  "nodeType": "IfStatement",
                  "src": "1508:134:36",
                  "trueBody": {
                    "id": 11647,
                    "nodeType": "Block",
                    "src": "1536:65:36",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 11644,
                              "name": "_user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11628,
                              "src": "1583:5:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 11641,
                                  "name": "_token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11630,
                                  "src": "1565:6:36",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 11640,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 14601,
                                "src": "1558:6:36",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$14601_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 11642,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1558:14:36",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$14601",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 11643,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1573:9:36",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 14558,
                            "src": "1558:24:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 11645,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1558:31:36",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 11634,
                        "id": 11646,
                        "nodeType": "Return",
                        "src": "1551:38:36"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 11626,
              "nodeType": "StructuredDocumentation",
              "src": "1167:194:36",
              "text": "@dev Check the token balance of a wallet in a token contract\nReturns the balance of the token for user. Avoids possible errors:\n- return 0 on non-contract address*"
            },
            "functionSelector": "f7888aec",
            "id": 11653,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "1376:9:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11631,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11628,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "1394:5:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 11653,
                  "src": "1386:13:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11627,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1386:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11630,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "1409:6:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 11653,
                  "src": "1401:14:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11629,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1401:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1385:31:36"
            },
            "returnParameters": {
              "id": 11634,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11633,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11653,
                  "src": "1438:7:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11632,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1438:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1437:9:36"
            },
            "scope": 11758,
            "src": "1367:282:36",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11756,
              "nodeType": "Block",
              "src": "1861:684:36",
              "statements": [
                {
                  "assignments": [
                    11667
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11667,
                      "mutability": "mutable",
                      "name": "core",
                      "nameLocation": "1890:4:36",
                      "nodeType": "VariableDeclaration",
                      "scope": 11756,
                      "src": "1874:20:36",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LendingPoolCore_$8023",
                        "typeString": "contract LendingPoolCore"
                      },
                      "typeName": {
                        "id": 11666,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 11665,
                          "name": "LendingPoolCore",
                          "nameLocations": [
                            "1874:15:36"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 8023,
                          "src": "1874:15:36"
                        },
                        "referencedDeclaration": 8023,
                        "src": "1874:15:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LendingPoolCore_$8023",
                          "typeString": "contract LendingPoolCore"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11673,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 11669,
                            "name": "provider",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11605,
                            "src": "1913:8:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LendingPoolAddressesProvider_$577",
                              "typeString": "contract LendingPoolAddressesProvider"
                            }
                          },
                          "id": 11670,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1922:18:36",
                          "memberName": "getLendingPoolCore",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 199,
                          "src": "1913:27:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view external returns (address payable)"
                          }
                        },
                        "id": 11671,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1913:29:36",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 11668,
                      "name": "LendingPoolCore",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8023,
                      "src": "1897:15:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_LendingPoolCore_$8023_$",
                        "typeString": "type(contract LendingPoolCore)"
                      }
                    },
                    "id": 11672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1897:46:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LendingPoolCore_$8023",
                      "typeString": "contract LendingPoolCore"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1874:69:36"
                },
                {
                  "assignments": [
                    11678
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11678,
                      "mutability": "mutable",
                      "name": "reserves",
                      "nameLocation": "1973:8:36",
                      "nodeType": "VariableDeclaration",
                      "scope": 11756,
                      "src": "1956:25:36",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 11676,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1956:7:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 11677,
                        "nodeType": "ArrayTypeName",
                        "src": "1956:9:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11682,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 11679,
                        "name": "core",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11667,
                        "src": "1984:4:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LendingPoolCore_$8023",
                          "typeString": "contract LendingPoolCore"
                        }
                      },
                      "id": 11680,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1989:11:36",
                      "memberName": "getReserves",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6127,
                      "src": "1984:16:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function () view external returns (address[] memory)"
                      }
                    },
                    "id": 11681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1984:18:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1956:46:36"
                },
                {
                  "assignments": [
                    11687
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11687,
                      "mutability": "mutable",
                      "name": "balances",
                      "nameLocation": "2032:8:36",
                      "nodeType": "VariableDeclaration",
                      "scope": 11756,
                      "src": "2015:25:36",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 11685,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2015:7:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 11686,
                        "nodeType": "ArrayTypeName",
                        "src": "2015:9:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11694,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 11691,
                          "name": "reserves",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11678,
                          "src": "2057:8:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 11692,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2066:6:36",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "2057:15:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11690,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2043:13:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 11688,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2047:7:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 11689,
                        "nodeType": "ArrayTypeName",
                        "src": "2047:9:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 11693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2043:30:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2015:58:36"
                },
                {
                  "body": {
                    "id": 11750,
                    "nodeType": "Block",
                    "src": "2132:366:36",
                    "statements": [
                      {
                        "condition": {
                          "id": 11712,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "2150:37:36",
                          "subExpression": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 11708,
                                  "name": "reserves",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11678,
                                  "src": "2175:8:36",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                },
                                "id": 11710,
                                "indexExpression": {
                                  "id": 11709,
                                  "name": "j",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 11696,
                                  "src": "2184:1:36",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2175:11:36",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 11706,
                                "name": "core",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 11667,
                                "src": "2151:4:36",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LendingPoolCore_$8023",
                                  "typeString": "contract LendingPoolCore"
                                }
                              },
                              "id": 11707,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2156:18:36",
                              "memberName": "getReserveIsActive",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 6029,
                              "src": "2151:23:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                                "typeString": "function (address) view external returns (bool)"
                              }
                            },
                            "id": 11711,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2151:36:36",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 11721,
                        "nodeType": "IfStatement",
                        "src": "2147:118:36",
                        "trueBody": {
                          "id": 11720,
                          "nodeType": "Block",
                          "src": "2188:77:36",
                          "statements": [
                            {
                              "expression": {
                                "id": 11717,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 11713,
                                    "name": "balances",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 11687,
                                    "src": "2207:8:36",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 11715,
                                  "indexExpression": {
                                    "id": 11714,
                                    "name": "j",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 11696,
                                    "src": "2216:1:36",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "2207:11:36",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "30",
                                  "id": 11716,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2221:1:36",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "2207:15:36",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 11718,
                              "nodeType": "ExpressionStatement",
                              "src": "2207:15:36"
                            },
                            {
                              "id": 11719,
                              "nodeType": "Continue",
                              "src": "2241:8:36"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 11728,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 11722,
                              "name": "reserves",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11678,
                              "src": "2283:8:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 11724,
                            "indexExpression": {
                              "id": 11723,
                              "name": "j",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11696,
                              "src": "2292:1:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2283:11:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 11725,
                                "name": "EthAddressLib",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10477,
                                "src": "2298:13:36",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_EthAddressLib_$10477_$",
                                  "typeString": "type(library EthAddressLib)"
                                }
                              },
                              "id": 11726,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2312:10:36",
                              "memberName": "ethAddress",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 10476,
                              "src": "2298:24:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                                "typeString": "function () pure returns (address)"
                              }
                            },
                            "id": 11727,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2298:26:36",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2283:41:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 11748,
                          "nodeType": "Block",
                          "src": "2410:77:36",
                          "statements": [
                            {
                              "expression": {
                                "id": 11746,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 11741,
                                    "name": "balances",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 11687,
                                    "src": "2429:8:36",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 11743,
                                  "indexExpression": {
                                    "id": 11742,
                                    "name": "j",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 11696,
                                    "src": "2438:1:36",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "2429:11:36",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 11744,
                                    "name": "_user",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 11656,
                                    "src": "2443:5:36",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 11745,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2449:7:36",
                                  "memberName": "balance",
                                  "nodeType": "MemberAccess",
                                  "src": "2443:13:36",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2429:27:36",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 11747,
                              "nodeType": "ExpressionStatement",
                              "src": "2429:27:36"
                            }
                          ]
                        },
                        "id": 11749,
                        "nodeType": "IfStatement",
                        "src": "2279:208:36",
                        "trueBody": {
                          "id": 11740,
                          "nodeType": "Block",
                          "src": "2326:78:36",
                          "statements": [
                            {
                              "expression": {
                                "id": 11738,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 11729,
                                    "name": "balances",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 11687,
                                    "src": "2345:8:36",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 11731,
                                  "indexExpression": {
                                    "id": 11730,
                                    "name": "j",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 11696,
                                    "src": "2354:1:36",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "2345:11:36",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 11733,
                                      "name": "_user",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 11656,
                                      "src": "2369:5:36",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "baseExpression": {
                                        "id": 11734,
                                        "name": "reserves",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 11678,
                                        "src": "2376:8:36",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                          "typeString": "address[] memory"
                                        }
                                      },
                                      "id": 11736,
                                      "indexExpression": {
                                        "id": 11735,
                                        "name": "j",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 11696,
                                        "src": "2385:1:36",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "2376:11:36",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 11732,
                                    "name": "balanceOf",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 11653,
                                    "src": "2359:9:36",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                      "typeString": "function (address,address) view returns (uint256)"
                                    }
                                  },
                                  "id": 11737,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2359:29:36",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2345:43:36",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 11739,
                              "nodeType": "ExpressionStatement",
                              "src": "2345:43:36"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 11702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 11699,
                      "name": "j",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11696,
                      "src": "2106:1:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 11700,
                        "name": "reserves",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11678,
                        "src": "2110:8:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 11701,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2119:6:36",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2110:15:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2106:19:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11751,
                  "initializationExpression": {
                    "assignments": [
                      11696
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 11696,
                        "mutability": "mutable",
                        "name": "j",
                        "nameLocation": "2099:1:36",
                        "nodeType": "VariableDeclaration",
                        "scope": 11751,
                        "src": "2091:9:36",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 11695,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2091:7:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 11698,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 11697,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2103:1:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2091:13:36"
                  },
                  "isSimpleCounterLoop": true,
                  "loopExpression": {
                    "expression": {
                      "id": 11704,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2127:3:36",
                      "subExpression": {
                        "id": 11703,
                        "name": "j",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11696,
                        "src": "2127:1:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 11705,
                    "nodeType": "ExpressionStatement",
                    "src": "2127:3:36"
                  },
                  "nodeType": "ForStatement",
                  "src": "2086:412:36"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "id": 11752,
                        "name": "reserves",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11678,
                        "src": "2518:8:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "id": 11753,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11687,
                        "src": "2528:8:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "id": 11754,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2517:20:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                      "typeString": "tuple(address[] memory,uint256[] memory)"
                    }
                  },
                  "functionReturnParameters": 11664,
                  "id": 11755,
                  "nodeType": "Return",
                  "src": "2510:27:36"
                }
              ]
            },
            "documentation": {
              "id": 11654,
              "nodeType": "StructuredDocumentation",
              "src": "1659:93:36",
              "text": "@dev provides balances of user wallet for all reserves available on the pool"
            },
            "functionSelector": "9e3c9309",
            "id": 11757,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserWalletBalances",
            "nameLocation": "1767:21:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11657,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11656,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "1797:5:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 11757,
                  "src": "1789:13:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11655,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1789:7:36",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1788:15:36"
            },
            "returnParameters": {
              "id": 11664,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11660,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11757,
                  "src": "1825:16:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 11658,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1825:7:36",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 11659,
                    "nodeType": "ArrayTypeName",
                    "src": "1825:9:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11663,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11757,
                  "src": "1843:16:36",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 11661,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1843:7:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 11662,
                    "nodeType": "ArrayTypeName",
                    "src": "1843:9:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1824:36:36"
            },
            "scope": 11758,
            "src": "1758:787:36",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 11759,
        "src": "767:1781:36",
        "usedErrors": [],
        "usedEvents": []
      }
    ],
    "src": "0:2548:36"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.24+commit.e11b9ed9.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.16",
  "updatedAt": "2024-02-11T21:41:58.808Z",
  "devdoc": {
    "author": "Aave, influenced by https://github.com/wbobeirne/eth-balance-checker/blob/master/contracts/BalanceChecker.sol",
    "details": "NOTE: THIS CONTRACT IS NOT USED WITHIN THE AAVE PROTOCOL. It's an accessory contract used to reduce the number of calls towards the blockchain from the Aave backend.*",
    "kind": "dev",
    "methods": {
      "balanceOf(address,address)": {
        "details": "Check the token balance of a wallet in a token contract Returns the balance of the token for user. Avoids possible errors: - return 0 on non-contract address*"
      },
      "getUserWalletBalances(address)": {
        "details": "provides balances of user wallet for all reserves available on the pool"
      }
    },
    "title": "WalletBalanceProvider contract",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "Implements a logic of getting multiple tokens balance for one user address",
    "version": 1
  }
}