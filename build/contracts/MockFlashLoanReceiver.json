{
  "contractName": "MockFlashLoanReceiver",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract ILendingPoolAddressesProvider",
          "name": "_provider",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        }
      ],
      "name": "AddressEmptyCode",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "AddressInsufficientBalance",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FailedInnerCall",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "SafeERC20FailedOperation",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_reserve",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "name": "ExecutedWithFail",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_reserve",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "name": "ExecutedWithSuccess",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "addressesProvider",
      "outputs": [
        {
          "internalType": "contract ILendingPoolAddressesProvider",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_fail",
          "type": "bool"
        }
      ],
      "name": "setFailExecutionTransfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_reserve",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "executeOperation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ILendingPoolAddressesProvider\",\"name\":\"_provider\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_reserve\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"ExecutedWithFail\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_reserve\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"ExecutedWithSuccess\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"addressesProvider\",\"outputs\":[{\"internalType\":\"contract ILendingPoolAddressesProvider\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_reserve\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"executeOperation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_fail\",\"type\":\"bool\"}],\"name\":\"setFailExecutionTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/mocks/flashloan/MockFlashLoanReceiver.sol\":\"MockFlashLoanReceiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"project:/contracts/flashloan/base/FlashLoanReceiverBase.sol\":{\"keccak256\":\"0xef679a3f15f2d89ca742d8cee0c65194a90278100a122d5e5cfa1a35b972284c\",\"urls\":[\"bzz-raw://2d244acc932747a924ffb8cf11afbbe7d38820732bf8b9a09e9288f1a0677585\",\"dweb:/ipfs/QmdEid5VnGxRU6RnGvAFNrA2Xh9CpbueeLApWRnonX3xYQ\"]},\"project:/contracts/flashloan/interfaces/IFlashLoanReceiver.sol\":{\"keccak256\":\"0x3b0ed008c0c0af90c7b48d2fc65a60fd2c6109e6644ad3789fdeb798986a2476\",\"urls\":[\"bzz-raw://0d5b7f27000f10e4062fb746a58704c55ed53aa64422a38300a1c08fd5ca2c6b\",\"dweb:/ipfs/QmXQkwUvYAwqHCHAnLLzDAt547VyjTTS2ux6Yvx7d2cUpH\"]},\"project:/contracts/interfaces/ILendingPoolAddressesProvider.sol\":{\"keccak256\":\"0xa6824af39e2b926aa3b9d8f8d0e2f1d5b0d630079a47a9cc4bcd77e586643ffd\",\"urls\":[\"bzz-raw://a9fe9f2682c4a08a01425bc52e1ec481a00b34988dfdc85a69a9b96701e58bc4\",\"dweb:/ipfs/QmeFzHMyD5gPc2eWMF6rHFimkZtKo3d4NwfxdpX96BuyRn\"]},\"project:/contracts/libraries/EthAddressLib.sol\":{\"keccak256\":\"0xe7545dacf8a038b507c7d3acbc93929172cdeb256d9ed64b259118774d3dae32\",\"urls\":[\"bzz-raw://27a83026dd8cd3a67c2f91e320ec684a3fae92df73b0d9e79dcc87a3d536be39\",\"dweb:/ipfs/QmUFtgqzAareZoSoQkhcGmK32JzpGokvkgfzK71fnAPk1w\"]},\"project:/contracts/mocks/flashloan/MockFlashLoanReceiver.sol\":{\"keccak256\":\"0x414e5373d4a4fb8c9006e60ce5b959acc971b82b542ecb0fadf0454001f8b55c\",\"urls\":[\"bzz-raw://095f77a2673ada7edf6b87c2335c46da5ce9aa2cc07af08d86933c22993a2da8\",\"dweb:/ipfs/QmbRjPLrLS9URTsBhFBSMyRC4WgxqXmGSMbbFUrsNnVt17\"]},\"project:/contracts/mocks/tokens/MintableERC20.sol\":{\"keccak256\":\"0x08473fee6e7969215869ee38f96f22a7c4a41fe9d5f170853ddd6d83cfd1650b\",\"urls\":[\"bzz-raw://c7ed6f8119b23c7e167eca81e8aa0cbceada787dd1eb35a61c23c8d7b27f36c7\",\"dweb:/ipfs/QmUPkNLLHAUoMJgeg7UG4iBZWf9Pj9DZyh8SwaZLysfUDJ\"]},\"project:/lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0xbd56d5c2cdbeb156c65a1a929f5ea9be5af3bde54244c8d8dcd7eb560512ed7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc97f1f9f1a8162af5098a609cf9a62afc2856a042243ce274762709e223711b\",\"dweb:/ipfs/QmTA2uoKWE1HyVGmdnGC5YNLuSBaPbDJVmmfUvvoEVN7Zj\"]},\"project:/lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x198433113545cc855ffb34ec844854dd59e1b8420a97a876ce67eae3b3929c50\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d26179570c319b970030e366c034a27921c6de0e78bbe32ea34a1b30c08d24af\",\"dweb:/ipfs/QmTKRYXntXit6U2gwMhwKojhwpfhXkzWSLS1cy6DVEi6F9\"]},\"project:/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x1c15854d415493331ff06ef9b0899f81dc6960189fa86cfd1b29c4374cc336a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5cb41bc9b9e1f5617d8e826c07fb21ecf986f70b4b5b395d6ecf9c5eb9f1a204\",\"dweb:/ipfs/QmNvJhvpJE8b3nyz7RaMCSPhfbmzj1TLuL3a7NkS9AHkGJ\"]},\"project:/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8edf51e08ea403df2542380d8fba4a3fc63aa07c571ee75cf55e18d1e353645b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5878fafb7c542c7b0d3f9d34447177b54a7ffa5a388a23c4da78116655b7fba6\",\"dweb:/ipfs/Qmb8VVEhtoUAEGsDRKmo9ER23eQfAEynDxvEDTeVWfG1Wm\"]},\"project:/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x36560926db8fa096a799a54143e48ff23002e115d4a8380e31def8f8aab0efd0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c289d6f0ededdbf5cf5f885adf2d41b76d6fe602946273cab10830f64906af9f\",\"dweb:/ipfs/Qmd81LQLGNmfs3rxwGLHUSJ2d3w5Z4aooxtRkCe7XDDEc8\"]},\"project:/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xcbb604d28d5f88a843c15f561334d36186f272d7099ae5daa859610871bd505e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb4a8d2d4884c7dd1917ba022867a3f37cfd88252bb0d8544eb46bfa3a1200af\",\"dweb:/ipfs/Qmdoauv9ffth9R63ZwSQ9HR9LAtVWGsEz8ByTB1eSsCMuL\"]},\"project:/lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x0e0796517afb4347534d93ede634036a1621b8486f06501847402357498c0726\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6a3961c19e2887a4fff4644e5284b53d1202e899e161b68771304bfc74bade6\",\"dweb:/ipfs/Qmb1Di8UfhT9QdBAPGiDBX8FYoR9tXd1YWUTUup8GGhg21\"]},\"project:/lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x3dcd533a3f709bda89bb8e649eb97aed96578e606f3796609544b1dcff975a0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://83fa9b15077fd2f33f6c175d694e2f7ae9c9a289c7feaca40aa7d6feb8d87c26\",\"dweb:/ipfs/QmQLfKCJ7mjiEeCGN1sHgWT8wjAMbAmBqcBVoQQyUZa5ws\"]}},\"version\":1}",
  "bytecode": "0x60803461007357601f61067e38819003918201601f19168301916001600160401b038311848410176100775780849260209460405283398101031261007357516001600160a01b03811690819003610073575f80546001600160a81b0319169190911790556040516105f2908161008c8239f35b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe608080604052600436101561001057005b5f3560e01c908163388f70f1146100f0578163c72c4d10146100ce575063ee8725581461003957005b346100ca5760803660031901126100ca576004356001600160a01b03811681036100ca576064359067ffffffffffffffff82116100ca57366023830112156100ca5781600401359161008a83610162565b90610098604051928361012c565b83825236602485830101116100ca57835f926100c895602460209401848301370101526044359060243590610196565b005b5f80fd5b346100ca575f3660031901126100ca575f546001600160a01b03168152602090f35b346100ca5760203660031901126100ca576004358015158091036100ca575f805460ff60a01b191660a09290921b60ff60a01b16919091179055005b90601f8019910116810190811067ffffffffffffffff82111761014e57604052565b634e487b7160e01b5f52604160045260245ffd5b67ffffffffffffffff811161014e57601f01601f191660200190565b908160209103126100ca575180151581036100ca5790565b6001600160a01b038181166101ab83306103b8565b84116103745760ff5f5460a01c166103265773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81036102cd575b50838301908184116102b9578060206004925f54166040519384809263076b7fbb60e51b82525afa9182156102ae575f9261026b575b50509361024161026692847f7d94e9d0c906b8d7b2b52a581b9e9ba728aa6f8cd8532bd87243d193f47401be97610475565b60405193849384604091949392606082019560018060a01b0316825260208201520152565b0390a1565b909591506020813d6020116102a6575b816102886020938361012c565b810103126100ca575194851685036100ca579361024161026661020f565b3d915061027b565b6040513d5f823e3d90fd5b634e487b7160e01b5f52601160045260245ffd5b60205f9160246040518094819363140e25ad60e31b83528a60048401525af180156102ae57156101d9576103189060203d60201161031f575b610310818361012c565b81019061017e565b505f6101d9565b503d610306565b5050604080516001600160a01b0390921682526020820192909252908101919091527f816f6a6bc084e1996be1a831afa1af30763d0501b6b43b9e1922a11f347366d7908060608101610266565b606460405162461bcd60e51b815260206004820152602060248201527f496e76616c69642062616c616e636520666f722074686520636f6e74726163746044820152fd5b906001600160a01b039081169073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee8214610440576040516370a0823160e01b815292166004830152602090829060249082905afa9081156102ae575f91610411575090565b90506020813d602011610438575b8161042c6020938361012c565b810103126100ca575190565b3d915061041f565b50503190565b3d15610470573d9061045782610162565b91610465604051938461012c565b82523d5f602084013e565b606090565b6001600160a01b039182169290919073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee84146105405760405191602083019363a9059cbb60e01b85521660248301526044820152604481526080810181811067ffffffffffffffff82111761014e57604052516104f7915f91829182865af16104f0610446565b9083610559565b8051908115159182610525575b505061050d5750565b60249060405190635274afe760e01b82526004820152fd5b610538925060208091830101910161017e565b155f80610504565b5f935083929083928392165af150610556610446565b50565b90610580575080511561056e57805190602001fd5b604051630a12f52160e11b8152600490fd5b815115806105b3575b610591575090565b604051639996b31560e01b81526001600160a01b039091166004820152602490fd5b50803b1561058956fea264697066735822122016d0ba02556160d157d0734e6a609fbcdc3b7003ed7f7b94fa864137213bd16164736f6c63430008180033",
  "deployedBytecode": "0x608080604052600436101561001057005b5f3560e01c908163388f70f1146100f0578163c72c4d10146100ce575063ee8725581461003957005b346100ca5760803660031901126100ca576004356001600160a01b03811681036100ca576064359067ffffffffffffffff82116100ca57366023830112156100ca5781600401359161008a83610162565b90610098604051928361012c565b83825236602485830101116100ca57835f926100c895602460209401848301370101526044359060243590610196565b005b5f80fd5b346100ca575f3660031901126100ca575f546001600160a01b03168152602090f35b346100ca5760203660031901126100ca576004358015158091036100ca575f805460ff60a01b191660a09290921b60ff60a01b16919091179055005b90601f8019910116810190811067ffffffffffffffff82111761014e57604052565b634e487b7160e01b5f52604160045260245ffd5b67ffffffffffffffff811161014e57601f01601f191660200190565b908160209103126100ca575180151581036100ca5790565b6001600160a01b038181166101ab83306103b8565b84116103745760ff5f5460a01c166103265773eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee81036102cd575b50838301908184116102b9578060206004925f54166040519384809263076b7fbb60e51b82525afa9182156102ae575f9261026b575b50509361024161026692847f7d94e9d0c906b8d7b2b52a581b9e9ba728aa6f8cd8532bd87243d193f47401be97610475565b60405193849384604091949392606082019560018060a01b0316825260208201520152565b0390a1565b909591506020813d6020116102a6575b816102886020938361012c565b810103126100ca575194851685036100ca579361024161026661020f565b3d915061027b565b6040513d5f823e3d90fd5b634e487b7160e01b5f52601160045260245ffd5b60205f9160246040518094819363140e25ad60e31b83528a60048401525af180156102ae57156101d9576103189060203d60201161031f575b610310818361012c565b81019061017e565b505f6101d9565b503d610306565b5050604080516001600160a01b0390921682526020820192909252908101919091527f816f6a6bc084e1996be1a831afa1af30763d0501b6b43b9e1922a11f347366d7908060608101610266565b606460405162461bcd60e51b815260206004820152602060248201527f496e76616c69642062616c616e636520666f722074686520636f6e74726163746044820152fd5b906001600160a01b039081169073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee8214610440576040516370a0823160e01b815292166004830152602090829060249082905afa9081156102ae575f91610411575090565b90506020813d602011610438575b8161042c6020938361012c565b810103126100ca575190565b3d915061041f565b50503190565b3d15610470573d9061045782610162565b91610465604051938461012c565b82523d5f602084013e565b606090565b6001600160a01b039182169290919073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee84146105405760405191602083019363a9059cbb60e01b85521660248301526044820152604481526080810181811067ffffffffffffffff82111761014e57604052516104f7915f91829182865af16104f0610446565b9083610559565b8051908115159182610525575b505061050d5750565b60249060405190635274afe760e01b82526004820152fd5b610538925060208091830101910161017e565b155f80610504565b5f935083929083928392165af150610556610446565b50565b90610580575080511561056e57805190602001fd5b604051630a12f52160e11b8152600490fd5b815115806105b3575b610591575090565b604051639996b31560e01b81526001600160a01b039091166004820152602490fd5b50803b1561058956fea264697066735822122016d0ba02556160d157d0734e6a609fbcdc3b7003ed7f7b94fa864137213bd16164736f6c63430008180033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "127:1512:37:-:0;;;;;;;;;;;;;-1:-1:-1;;127:1512:37;;;;-1:-1:-1;;;;;127:1512:37;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;127:1512:37;;;;;;;;-1:-1:-1;127:1512:37;;-1:-1:-1;;;;;;127:1512:37;;;;;;;;;;;;;;;;;-1:-1:-1;127:1512:37;;;;;;-1:-1:-1;127:1512:37;;;;;-1:-1:-1;127:1512:37",
  "deployedSourceMap": "127:1512:37:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;127:1512:37;;;;;;-1:-1:-1;;;;;127:1512:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;127:1512:37;;;;;;-1:-1:-1;;;;;127:1512:37;;;;;;;;;;;;-1:-1:-1;;127:1512:37;;;;;;;;;;;;;;;;;-1:-1:-1;;;;127:1512:37;;;;;;-1:-1:-1;;;127:1512:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;127:1512:37;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;593:1043::-;-1:-1:-1;;;;;127:1512:37;;;937:43;127:1512;964:4;937:43;:::i;:::-;926:54;;127:1512;;;-1:-1:-1;127:1512:37;;;;1030:112;;264:42:23;1365:38:37;;1362:86;;593:1043;127:1512;;;;;;;;;;;798:38:6;;127:1512:37;-1:-1:-1;127:1512:37;;;;;;;;;;;798:38:6;;;;;;;;;-1:-1:-1;798:38:6;;;593:1043:37;881:7:6;;;;1584:44:37;881:7:6;;1584:44:37;881:7:6;;:::i;:::-;127:1512:37;;1584:44;;;;127:1512;;;;;;;;;;;;;;;;;;;;;;;;1584:44;;;;593:1043::o;798:38:6:-;;;;;;;;;;;;;;;;;;;:::i;:::-;;;127:1512:37;;;;;;;;;;;;798:38:6;881:7;1584:44:37;798:38:6;;;;;-1:-1:-1;798:38:6;;;127:1512:37;;;-1:-1:-1;127:1512:37;;;;;;;;;-1:-1:-1;127:1512:37;;;;;-1:-1:-1;127:1512:37;1362:86;1420:16;-1:-1:-1;127:1512:37;;;;;;;;;;;1420:16;;;;;;127:1512;1420:16;;;;;;;1362:86;1420:16;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;1362:86;;1420:16;;;;;1030:112;-1:-1:-1;;127:1512:37;;;-1:-1:-1;;;;;127:1512:37;;;;;;;;;;;;;;;;;;;1068:41;;127:1512;;;;1068:41;127:1512;;;;;;;;;;;;;;;;;;;;;;;;;;1269:263:6;;-1:-1:-1;;;;;127:1512:37;;;;264:42:23;1377:38:6;;1374:94;;127:1512:37;;-1:-1:-1;;;1487:35:6;;127:1512:37;;1487:35:6;;;127:1512:37;1487:35:6;;127:1512:37;;;;;;1487:35:6;;;;;;;-1:-1:-1;1487:35:6;;;1480:42;1269:263;:::o;1487:35::-;;;;;;;;;;;;;;;;;:::i;:::-;;;127:1512:37;;;;;1269:263:6;:::o;1487:35::-;;;-1:-1:-1;1487:35:6;;1374:94;1441:15;;;1434:22;:::o;127:1512:37:-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;127:1512:37;;;;:::o;:::-;;;:::o;905:356:6:-;-1:-1:-1;;;;;127:1512:37;;;;905:356:6;;127:1512:37;264:42:23;1020:38:6;;1017:168;;127:1512:37;;1448:43:79;;;;127:1512:37;;;;1448:43:79;;127:1512:37;1448:43:79;;;127:1512:37;;;;;;1448:43:79;;127:1512:37;;;;;;;;;;;;;;3548:31:80;3597:55;;-1:-1:-1;;;;;3548:31:80;;;;;:::i;:::-;3597:55;;;:::i;:::-;127:1512:37;;4647:22:79;;;;:57;;;;905:356:6;4643:137:79;;;;905:356:6;:::o;4643:137:79:-;1448:43;127:1512:37;;;4728:40:79;;;;;;;;;127:1512:37;4728:40:79;4647:57;4674:30;;;1448:43;4674:30;;;;;;;;:::i;:::-;4673:31;4647:57;;;;1017:168:6;1115:37;127:1512:37;;;;;;;;;;1115:37:6;;;;;:::i;:::-;;1167:7::o;4738:597:80:-;;4915:8;;-1:-1:-1;127:1512:37;;6021:21:80;:17;;6196:145;;;;;;6017:392;127:1512:37;;-1:-1:-1;;;6380:17:80;;;;;4911:417;127:1512:37;;5168:22:80;:49;;;4911:417;5164:121;;5299:17;;:::o;5164:121::-;127:1512:37;;-1:-1:-1;;;5245:24:80;;-1:-1:-1;;;;;127:1512:37;;;5245:24:80;;;127:1512:37;;;5245:24:80;5168:49;5194:18;;;:23;5168:49;",
  "source": "pragma solidity ^0.8.24;\r\n\r\nimport \"../../flashloan/base/FlashLoanReceiverBase.sol\";\r\nimport \"../tokens/MintableERC20.sol\";\r\n\r\ncontract MockFlashLoanReceiver is FlashLoanReceiverBase {\r\n\r\n    event ExecutedWithFail(address _reserve, uint256 _amount, uint256 _fee);\r\n    event ExecutedWithSuccess(address _reserve, uint256 _amount, uint256 _fee);\r\n\r\n\r\n    bool failExecution = false;\r\n\r\n    constructor(ILendingPoolAddressesProvider _provider) FlashLoanReceiverBase(_provider) {\r\n    }\r\n\r\n    function setFailExecutionTransfer(bool _fail) public {\r\n        failExecution = _fail;\r\n    }\r\n\r\n    function executeOperation(\r\n        address _reserve,\r\n        uint256 _amount,\r\n        uint256 _fee,\r\n        bytes memory /*_params*/) public {\r\n        //mint to this contract the specific amount\r\n        MintableERC20 token = MintableERC20(_reserve);\r\n\r\n\r\n        //check the contract has the specified balance\r\n        require(_amount <= getBalanceInternal(address(this), _reserve), \"Invalid balance for the contract\");\r\n\r\n        if(failExecution) {\r\n            emit ExecutedWithFail(_reserve, _amount, _fee);\r\n            return;\r\n        }\r\n\r\n        //execution does not fail - mint tokens and return them to the _destination\r\n        //note: if the reserve is eth, the mock contract must receive at least _fee ETH before calling executeOperation\r\n\r\n        if(_reserve != EthAddressLib.ethAddress()) {\r\n            token.mint(_fee);\r\n        }\r\n        //returning amount + fee to the destination\r\n        transferFundsBackToPoolInternal(_reserve, _amount + _fee);\r\n        emit ExecutedWithSuccess(_reserve, _amount, _fee);\r\n    }\r\n}",
  "sourcePath": "C:\\Proj\\fork-protocol\\contracts\\mocks\\flashloan\\MockFlashLoanReceiver.sol",
  "ast": {
    "absolutePath": "project:/contracts/mocks/flashloan/MockFlashLoanReceiver.sol",
    "exportedSymbols": {
      "Address": [
        15206
      ],
      "Context": [
        15236
      ],
      "ERC20": [
        14523
      ],
      "EthAddressLib": [
        10477
      ],
      "FlashLoanReceiverBase": [
        1325
      ],
      "IERC20": [
        14601
      ],
      "IERC20Errors": [
        13913
      ],
      "IERC20Metadata": [
        14627
      ],
      "IERC20Permit": [
        14663
      ],
      "IFlashLoanReceiver": [
        1340
      ],
      "ILendingPoolAddressesProvider": [
        1593
      ],
      "MintableERC20": [
        12332
      ],
      "MockFlashLoanReceiver": [
        11872
      ],
      "SafeERC20": [
        14953
      ]
    },
    "id": 11873,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 11760,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:37"
      },
      {
        "absolutePath": "project:/contracts/flashloan/base/FlashLoanReceiverBase.sol",
        "file": "../../flashloan/base/FlashLoanReceiverBase.sol",
        "id": 11761,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 11873,
        "sourceUnit": 1326,
        "src": "28:56:37",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/mocks/tokens/MintableERC20.sol",
        "file": "../tokens/MintableERC20.sol",
        "id": 11762,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 11873,
        "sourceUnit": 12333,
        "src": "86:37:37",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 11763,
              "name": "FlashLoanReceiverBase",
              "nameLocations": [
                "161:21:37"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1325,
              "src": "161:21:37"
            },
            "id": 11764,
            "nodeType": "InheritanceSpecifier",
            "src": "161:21:37"
          }
        ],
        "canonicalName": "MockFlashLoanReceiver",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 11872,
        "linearizedBaseContracts": [
          11872,
          1325,
          1340
        ],
        "name": "MockFlashLoanReceiver",
        "nameLocation": "136:21:37",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "eventSelector": "816f6a6bc084e1996be1a831afa1af30763d0501b6b43b9e1922a11f347366d7",
            "id": 11772,
            "name": "ExecutedWithFail",
            "nameLocation": "198:16:37",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 11771,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11766,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_reserve",
                  "nameLocation": "223:8:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 11772,
                  "src": "215:16:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11765,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "215:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11768,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "241:7:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 11772,
                  "src": "233:15:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11767,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "233:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11770,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_fee",
                  "nameLocation": "258:4:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 11772,
                  "src": "250:12:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11769,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "250:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "214:49:37"
            },
            "src": "192:72:37"
          },
          {
            "anonymous": false,
            "eventSelector": "7d94e9d0c906b8d7b2b52a581b9e9ba728aa6f8cd8532bd87243d193f47401be",
            "id": 11780,
            "name": "ExecutedWithSuccess",
            "nameLocation": "276:19:37",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 11779,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11774,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_reserve",
                  "nameLocation": "304:8:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 11780,
                  "src": "296:16:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11773,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "296:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11776,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "322:7:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 11780,
                  "src": "314:15:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11775,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "314:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11778,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_fee",
                  "nameLocation": "339:4:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 11780,
                  "src": "331:12:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11777,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "331:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "295:49:37"
            },
            "src": "270:75:37"
          },
          {
            "constant": false,
            "id": 11783,
            "mutability": "mutable",
            "name": "failExecution",
            "nameLocation": "360:13:37",
            "nodeType": "VariableDeclaration",
            "scope": 11872,
            "src": "355:26:37",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 11781,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "355:4:37",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 11782,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "376:5:37",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 11792,
              "nodeType": "Block",
              "src": "476:8:37",
              "statements": []
            },
            "id": 11793,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 11789,
                    "name": "_provider",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11786,
                    "src": "465:9:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$1593",
                      "typeString": "contract ILendingPoolAddressesProvider"
                    }
                  }
                ],
                "id": 11790,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 11788,
                  "name": "FlashLoanReceiverBase",
                  "nameLocations": [
                    "443:21:37"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1325,
                  "src": "443:21:37"
                },
                "nodeType": "ModifierInvocation",
                "src": "443:32:37"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11787,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11786,
                  "mutability": "mutable",
                  "name": "_provider",
                  "nameLocation": "432:9:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 11793,
                  "src": "402:39:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$1593",
                    "typeString": "contract ILendingPoolAddressesProvider"
                  },
                  "typeName": {
                    "id": 11785,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 11784,
                      "name": "ILendingPoolAddressesProvider",
                      "nameLocations": [
                        "402:29:37"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1593,
                      "src": "402:29:37"
                    },
                    "referencedDeclaration": 1593,
                    "src": "402:29:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILendingPoolAddressesProvider_$1593",
                      "typeString": "contract ILendingPoolAddressesProvider"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "401:41:37"
            },
            "returnParameters": {
              "id": 11791,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "476:0:37"
            },
            "scope": 11872,
            "src": "390:94:37",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 11802,
              "nodeType": "Block",
              "src": "545:40:37",
              "statements": [
                {
                  "expression": {
                    "id": 11800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 11798,
                      "name": "failExecution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11783,
                      "src": "556:13:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 11799,
                      "name": "_fail",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11795,
                      "src": "572:5:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "556:21:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11801,
                  "nodeType": "ExpressionStatement",
                  "src": "556:21:37"
                }
              ]
            },
            "functionSelector": "388f70f1",
            "id": 11803,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFailExecutionTransfer",
            "nameLocation": "501:24:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11796,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11795,
                  "mutability": "mutable",
                  "name": "_fail",
                  "nameLocation": "531:5:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 11803,
                  "src": "526:10:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11794,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "526:4:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "525:12:37"
            },
            "returnParameters": {
              "id": 11797,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "545:0:37"
            },
            "scope": 11872,
            "src": "492:93:37",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1339
            ],
            "body": {
              "id": 11870,
              "nodeType": "Block",
              "src": "738:898:37",
              "statements": [
                {
                  "assignments": [
                    11816
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11816,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "816:5:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 11870,
                      "src": "802:19:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MintableERC20_$12332",
                        "typeString": "contract MintableERC20"
                      },
                      "typeName": {
                        "id": 11815,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 11814,
                          "name": "MintableERC20",
                          "nameLocations": [
                            "802:13:37"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 12332,
                          "src": "802:13:37"
                        },
                        "referencedDeclaration": 12332,
                        "src": "802:13:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MintableERC20_$12332",
                          "typeString": "contract MintableERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11820,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 11818,
                        "name": "_reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11805,
                        "src": "838:8:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 11817,
                      "name": "MintableERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12332,
                      "src": "824:13:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_MintableERC20_$12332_$",
                        "typeString": "type(contract MintableERC20)"
                      }
                    },
                    "id": 11819,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "824:23:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MintableERC20_$12332",
                      "typeString": "contract MintableERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "802:45:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 11830,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 11822,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11807,
                          "src": "926:7:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 11826,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "964:4:37",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MockFlashLoanReceiver_$11872",
                                    "typeString": "contract MockFlashLoanReceiver"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MockFlashLoanReceiver_$11872",
                                    "typeString": "contract MockFlashLoanReceiver"
                                  }
                                ],
                                "id": 11825,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "956:7:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 11824,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "956:7:37",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 11827,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "956:13:37",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 11828,
                              "name": "_reserve",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11805,
                              "src": "971:8:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 11823,
                            "name": "getBalanceInternal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1324,
                            "src": "937:18:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view returns (uint256)"
                            }
                          },
                          "id": 11829,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "937:43:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "926:54:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c69642062616c616e636520666f722074686520636f6e7472616374",
                        "id": 11831,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "982:34:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b7eb1acc2a916521532d41db798e862e3bc634b536ffa4062c39b663132b6869",
                          "typeString": "literal_string \"Invalid balance for the contract\""
                        },
                        "value": "Invalid balance for the contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b7eb1acc2a916521532d41db798e862e3bc634b536ffa4062c39b663132b6869",
                          "typeString": "literal_string \"Invalid balance for the contract\""
                        }
                      ],
                      "id": 11821,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "918:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11832,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "918:99:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11833,
                  "nodeType": "ExpressionStatement",
                  "src": "918:99:37"
                },
                {
                  "condition": {
                    "id": 11834,
                    "name": "failExecution",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11783,
                    "src": "1033:13:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11843,
                  "nodeType": "IfStatement",
                  "src": "1030:112:37",
                  "trueBody": {
                    "id": 11842,
                    "nodeType": "Block",
                    "src": "1048:94:37",
                    "statements": [
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 11836,
                              "name": "_reserve",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11805,
                              "src": "1085:8:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 11837,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11807,
                              "src": "1095:7:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 11838,
                              "name": "_fee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11809,
                              "src": "1104:4:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 11835,
                            "name": "ExecutedWithFail",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11772,
                            "src": "1068:16:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256)"
                            }
                          },
                          "id": 11839,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1068:41:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 11840,
                        "nodeType": "EmitStatement",
                        "src": "1063:46:37"
                      },
                      {
                        "functionReturnParameters": 11813,
                        "id": 11841,
                        "nodeType": "Return",
                        "src": "1124:7:37"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 11848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 11844,
                      "name": "_reserve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11805,
                      "src": "1365:8:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 11845,
                          "name": "EthAddressLib",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10477,
                          "src": "1377:13:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_EthAddressLib_$10477_$",
                            "typeString": "type(library EthAddressLib)"
                          }
                        },
                        "id": 11846,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1391:10:37",
                        "memberName": "ethAddress",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10476,
                        "src": "1377:24:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$__$returns$_t_address_$",
                          "typeString": "function () pure returns (address)"
                        }
                      },
                      "id": 11847,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1377:26:37",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1365:38:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11856,
                  "nodeType": "IfStatement",
                  "src": "1362:86:37",
                  "trueBody": {
                    "id": 11855,
                    "nodeType": "Block",
                    "src": "1405:43:37",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 11852,
                              "name": "_fee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11809,
                              "src": "1431:4:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 11849,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11816,
                              "src": "1420:5:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MintableERC20_$12332",
                                "typeString": "contract MintableERC20"
                              }
                            },
                            "id": 11851,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1426:4:37",
                            "memberName": "mint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12331,
                            "src": "1420:10:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) external returns (bool)"
                            }
                          },
                          "id": 11853,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1420:16:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 11854,
                        "nodeType": "ExpressionStatement",
                        "src": "1420:16:37"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11858,
                        "name": "_reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11805,
                        "src": "1543:8:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 11861,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 11859,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11807,
                          "src": "1553:7:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 11860,
                          "name": "_fee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11809,
                          "src": "1563:4:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1553:14:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11857,
                      "name": "transferFundsBackToPoolInternal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1263,
                      "src": "1511:31:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 11862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1511:57:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11863,
                  "nodeType": "ExpressionStatement",
                  "src": "1511:57:37"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 11865,
                        "name": "_reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11805,
                        "src": "1604:8:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11866,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11807,
                        "src": "1614:7:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 11867,
                        "name": "_fee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11809,
                        "src": "1623:4:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 11864,
                      "name": "ExecutedWithSuccess",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11780,
                      "src": "1584:19:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 11868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1584:44:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11869,
                  "nodeType": "EmitStatement",
                  "src": "1579:49:37"
                }
              ]
            },
            "functionSelector": "ee872558",
            "id": 11871,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "executeOperation",
            "nameLocation": "602:16:37",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11812,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11805,
                  "mutability": "mutable",
                  "name": "_reserve",
                  "nameLocation": "637:8:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 11871,
                  "src": "629:16:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11804,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "629:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11807,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "664:7:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 11871,
                  "src": "656:15:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11806,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "656:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11809,
                  "mutability": "mutable",
                  "name": "_fee",
                  "nameLocation": "690:4:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 11871,
                  "src": "682:12:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11808,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "682:7:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11811,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11871,
                  "src": "705:12:37",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 11810,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "705:5:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "618:112:37"
            },
            "returnParameters": {
              "id": 11813,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "738:0:37"
            },
            "scope": 11872,
            "src": "593:1043:37",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 11873,
        "src": "127:1512:37",
        "usedErrors": [
          14680,
          14961,
          14966,
          14969
        ],
        "usedEvents": [
          11772,
          11780
        ]
      }
    ],
    "src": "0:1639:37"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.24+commit.e11b9ed9.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.16",
  "updatedAt": "2024-02-11T21:41:58.811Z",
  "devdoc": {
    "errors": {
      "AddressEmptyCode(address)": [
        {
          "details": "There's no code at `target` (it is not a contract)."
        }
      ],
      "AddressInsufficientBalance(address)": [
        {
          "details": "The ETH balance of the account is not enough to perform the operation."
        }
      ],
      "FailedInnerCall()": [
        {
          "details": "A call to an address target failed. The target may have reverted."
        }
      ],
      "SafeERC20FailedOperation(address)": [
        {
          "details": "An operation with an ERC20 token failed."
        }
      ]
    },
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}