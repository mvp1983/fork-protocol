{
  "contractName": "InitializableAdminUpgradeabilityProxy",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "changeAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "implementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "upgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "upgradeToAndCall",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_logic",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_logic",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_logic\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_logic\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extends from BaseAdminUpgradeabilityProxy with an initializer for  initializing the implementation, admin, and init data.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the administration has been transferred.\",\"params\":{\"newAdmin\":\"Address of the new admin.\",\"previousAdmin\":\"Address of the previous admin.\"}},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\",\"params\":{\"implementation\":\"Address of the new implementation.\"}}},\"kind\":\"dev\",\"methods\":{\"admin()\":{\"returns\":{\"_0\":\"The address of the proxy admin.\"}},\"changeAdmin(address)\":{\"details\":\"Changes the admin of the proxy. Only the current admin can call this function.\",\"params\":{\"newAdmin\":\"Address to transfer proxy administration to.\"}},\"implementation()\":{\"returns\":{\"_0\":\"The address of the implementation.\"}},\"initialize(address,address,bytes)\":{\"params\":{\"_admin\":\"Address of the proxy administrator.\",\"_data\":\"Data to send as msg.data to the implementation to initialize the proxied contract. It should include the signature and the parameters of the function to be called, as described in https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding. This parameter is optional, if no data is given the initialization call to proxied contract will be skipped.\",\"_logic\":\"address of the initial implementation.\"}},\"initialize(address,bytes)\":{\"details\":\"Contract initializer.\",\"params\":{\"_data\":\"Data to send as msg.data to the implementation to initialize the proxied contract. It should include the signature and the parameters of the function to be called, as described in https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding. This parameter is optional, if no data is given the initialization call to proxied contract will be skipped.\",\"_logic\":\"Address of the initial implementation.\"}},\"upgradeTo(address)\":{\"details\":\"Upgrade the backing implementation of the proxy. Only the admin can call this function.\",\"params\":{\"newImplementation\":\"Address of the new implementation.\"}},\"upgradeToAndCall(address,bytes)\":{\"details\":\"Upgrade the backing implementation of the proxy and call a function on the new implementation. This is useful to initialize the proxied contract.\",\"params\":{\"data\":\"Data to send as msg.data in the low level call. It should include the signature and the parameters of the function to be called, as described in https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding.\",\"newImplementation\":\"Address of the new implementation.\"}}},\"title\":\"InitializableAdminUpgradeabilityProxy\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"initialize(address,address,bytes)\":{\"notice\":\"Contract initializer.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/libraries/openzeppelin-upgradeability/InitializableAdminUpgradeabilityProxy.sol\":\"InitializableAdminUpgradeabilityProxy\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"project:/contracts/libraries/openzeppelin-upgradeability/BaseAdminUpgradeabilityProxy.sol\":{\"keccak256\":\"0x1b09170a1823d0c827aed11c4478858b1064d0b35b650f5bc9fa3486719b7abb\",\"urls\":[\"bzz-raw://2195115ec841f27abfcdbc3e8fa232300bde463d64ad9ec88f1b13a7ff59f90d\",\"dweb:/ipfs/QmZooDusYRHQmxeqffRhd42TomvL7FMZCC93opACYtZ8qg\"]},\"project:/contracts/libraries/openzeppelin-upgradeability/BaseUpgradeabilityProxy.sol\":{\"keccak256\":\"0xf200004a6699b534c4e47b0585a44ec4882b07931469aa0e3b5a863c610ca4b0\",\"urls\":[\"bzz-raw://67a250e161a80f00ccf93c82cf9d3345b4f30ff3f66ebaedd5f507ffe2034cd7\",\"dweb:/ipfs/QmXHzEYzmjJkY8JNbzq9k8rRa862eAJXrXNad3Ccxvf5f9\"]},\"project:/contracts/libraries/openzeppelin-upgradeability/InitializableAdminUpgradeabilityProxy.sol\":{\"keccak256\":\"0x0df5648780fbb5f16bfe4ad76c290fe7ae02a66eb9c2e05a9473dcce588ca108\",\"urls\":[\"bzz-raw://e4ab9b03bd7064ad876cfe66a25145f0c561bec7f22967339cb6a22af07626dd\",\"dweb:/ipfs/QmdaBe689TDGL54RzKj6vcpjmp5axLhsWhGyJtb4TNWJsV\"]},\"project:/contracts/libraries/openzeppelin-upgradeability/InitializableUpgradeabilityProxy.sol\":{\"keccak256\":\"0x12c588c0458d628ebe8aec2252e5dac1d9c1cf1e0ba8c7dc0a884744685086c5\",\"urls\":[\"bzz-raw://1e1aa6f5451630bc71b519a4f5ee600ce94fc875ce373e67419698fc365963b8\",\"dweb:/ipfs/QmYEAKyn336Q4C9VNDrEpezYYVY5osykRvWeaVwt66F4K2\"]},\"project:/contracts/libraries/openzeppelin-upgradeability/Proxy.sol\":{\"keccak256\":\"0x00c8bd0053e20a3f31d460c3ad5a125c67b684eb530661bef941da93fb62649a\",\"urls\":[\"bzz-raw://9e91e67934017b49562cd67b14a8cbedee9e45fa41f9aa760cb46004f2b11b7d\",\"dweb:/ipfs/QmXLLkKcm1xBfgxn86v1RuLv5VKAx3MVuMYznVMpMkidNz\"]},\"project:/contracts/libraries/openzeppelin-upgradeability/UpgradeabilityProxy.sol\":{\"keccak256\":\"0x3a9343c7ddaa8782d72b21720f10d5878e8d9b02f1c435e9dc2aa1d66b862de5\",\"urls\":[\"bzz-raw://bd549905126766d57a818f4240e60f0ea1795846e274c6006e348bba7e3f07ab\",\"dweb:/ipfs/QmZAbFy3T7mDUKnszH9d8BSW772wVxDtjBjpLdVdFCuZ4A\"]},\"project:/lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x0e0796517afb4347534d93ede634036a1621b8486f06501847402357498c0726\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6a3961c19e2887a4fff4644e5284b53d1202e899e161b68771304bfc74bade6\",\"dweb:/ipfs/Qmb1Di8UfhT9QdBAPGiDBX8FYoR9tXd1YWUTUup8GGhg21\"]}},\"version\":1}",
  "bytecode": "0x608080604052346100165761061c908161001b8239f35b5f80fdfe6080604052600436106104c0575f3560e01c80633659cfe61461007b5780634f1ef286146100765780635c60da1b146100715780638f2839701461006c578063cf7a1d7714610067578063d1f57894146100625763f851a440036104c05761040d565b6103cf565b610357565b6101c8565b61017c565b6100de565b346100c45760203660031901126100c4576100946100c8565b5f805160206105a783398151915254336001600160a01b03909116036100bf576100bd906104eb565b005b6104c0565b5f80fd5b600435906001600160a01b03821682036100c457565b60403660031901126100c4576100f26100c8565b60243567ffffffffffffffff918282116100c457366023830112156100c45781600401359283116100c45736602484840101116100c4575f805160206105a783398151915254336001600160a01b03909116036100bf5760245f93928493610159846104eb565b80604051938493018337810184815203915af461017461044d565b50156100c457005b346100c4575f3660031901126100c4575f805160206105a7833981519152546001600160a01b039033908216036100bf575f805160206105c78339815191525460405191168152602090f35b346100c45760203660031901126100c4576101e16100c8565b5f805160206105a783398151915280546001600160a01b0392919033908416036100bf57828216908115610257576100bd937f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f9260409254918351921682526020820152a15f805160206105a783398151915255565b60405162461bcd60e51b815260206004820152603660248201527f43616e6e6f74206368616e6765207468652061646d696e206f6620612070726f604482015275787920746f20746865207a65726f206164647265737360501b6064820152608490fd5b634e487b7160e01b5f52604160045260245ffd5b6040519190601f01601f1916820167ffffffffffffffff8111838210176102f557604052565b6102bb565b67ffffffffffffffff81116102f557601f01601f191660200190565b81601f820112156100c457803590610335610330836102fa565b6102cf565b92828452602083830101116100c457815f926020809301838601378301015290565b60603660031901126100c45761036b6100c8565b602435906001600160a01b0380831683036100c45760443567ffffffffffffffff81116100c4576103a0903690600401610316565b905f805160206105c783398151915254166100c4576103be91610472565b5f805160206105a783398151915255005b60403660031901126100c4576103e36100c8565b6024359067ffffffffffffffff82116100c4576104076100bd923690600401610316565b90610472565b346100c4575f3660031901126100c4575f805160206105a783398151915280546001600160a01b039033908216036100bf57602091549060405191168152f35b3d1561046d573d90610461610330836102fa565b9182523d5f602084013e565b606090565b5f805160206105c7833981519152549091906001600160a01b03166100c45761049a82610523565b8051806104a657505050565b5f926020849301905af46104b861044d565b50156100c457565b5f805f805160206105c783398151915254368280378136915af43d5f803e156104e7573d5ff35b3d5ffd5b6104f481610523565b6001600160a01b03167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b5f80a2565b803b1561053b575f805160206105c783398151915255565b60405162461bcd60e51b815260206004820152603b60248201527f43616e6e6f742073657420612070726f787920696d706c656d656e746174696f60448201527f6e20746f2061206e6f6e2d636f6e7472616374206164647265737300000000006064820152608490fdfeb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca2646970667358221220fc4c27b2578716776fca15b51f87f1c2cb2beddb6edd1e614792a95f1b3872e364736f6c63430008180033",
  "deployedBytecode": "0x6080604052600436106104c0575f3560e01c80633659cfe61461007b5780634f1ef286146100765780635c60da1b146100715780638f2839701461006c578063cf7a1d7714610067578063d1f57894146100625763f851a440036104c05761040d565b6103cf565b610357565b6101c8565b61017c565b6100de565b346100c45760203660031901126100c4576100946100c8565b5f805160206105a783398151915254336001600160a01b03909116036100bf576100bd906104eb565b005b6104c0565b5f80fd5b600435906001600160a01b03821682036100c457565b60403660031901126100c4576100f26100c8565b60243567ffffffffffffffff918282116100c457366023830112156100c45781600401359283116100c45736602484840101116100c4575f805160206105a783398151915254336001600160a01b03909116036100bf5760245f93928493610159846104eb565b80604051938493018337810184815203915af461017461044d565b50156100c457005b346100c4575f3660031901126100c4575f805160206105a7833981519152546001600160a01b039033908216036100bf575f805160206105c78339815191525460405191168152602090f35b346100c45760203660031901126100c4576101e16100c8565b5f805160206105a783398151915280546001600160a01b0392919033908416036100bf57828216908115610257576100bd937f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f9260409254918351921682526020820152a15f805160206105a783398151915255565b60405162461bcd60e51b815260206004820152603660248201527f43616e6e6f74206368616e6765207468652061646d696e206f6620612070726f604482015275787920746f20746865207a65726f206164647265737360501b6064820152608490fd5b634e487b7160e01b5f52604160045260245ffd5b6040519190601f01601f1916820167ffffffffffffffff8111838210176102f557604052565b6102bb565b67ffffffffffffffff81116102f557601f01601f191660200190565b81601f820112156100c457803590610335610330836102fa565b6102cf565b92828452602083830101116100c457815f926020809301838601378301015290565b60603660031901126100c45761036b6100c8565b602435906001600160a01b0380831683036100c45760443567ffffffffffffffff81116100c4576103a0903690600401610316565b905f805160206105c783398151915254166100c4576103be91610472565b5f805160206105a783398151915255005b60403660031901126100c4576103e36100c8565b6024359067ffffffffffffffff82116100c4576104076100bd923690600401610316565b90610472565b346100c4575f3660031901126100c4575f805160206105a783398151915280546001600160a01b039033908216036100bf57602091549060405191168152f35b3d1561046d573d90610461610330836102fa565b9182523d5f602084013e565b606090565b5f805160206105c7833981519152549091906001600160a01b03166100c45761049a82610523565b8051806104a657505050565b5f926020849301905af46104b861044d565b50156100c457565b5f805f805160206105c783398151915254368280378136915af43d5f803e156104e7573d5ff35b3d5ffd5b6104f481610523565b6001600160a01b03167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b5f80a2565b803b1561053b575f805160206105c783398151915255565b60405162461bcd60e51b815260206004820152603b60248201527f43616e6e6f742073657420612070726f787920696d706c656d656e746174696f60448201527f6e20746f2061206e6f6e2d636f6e7472616374206164647265737300000000006064820152608490fdfeb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbca2646970667358221220fc4c27b2578716776fca15b51f87f1c2cb2beddb6edd1e614792a95f1b3872e364736f6c63430008180033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "320:1036:29:-:0;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "320:1036:29:-:0;;;;;;446:58:31;320:1036:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;446:58:31;320:1036:29;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;;;-1:-1:-1;;320:1036:29;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;3436:53:26;1298:10;-1:-1:-1;;;;;320:1036:29;;;1298:22:26;320:1036:29;;2443:17:26;;;:::i;:::-;320:1036:29;1294:100:26;;:::i;320:1036:29:-;;;;;;;;-1:-1:-1;;;;;320:1036:29;;;;;;:::o;:::-;;;-1:-1:-1;;320:1036:29;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;3436:53:26;1298:10;-1:-1:-1;;;;;320:1036:29;;;1298:22:26;320:1036:29;;;-1:-1:-1;3122:17:26;;;;;;;:::i;:::-;320:1036:29;;;;;;;;;;;;;;3170:36:26;;;;;;:::i;:::-;;320:1036:29;;;;;;;;;;-1:-1:-1;;320:1036:29;;;;-1:-1:-1;;;;;;;;;;;3436:53:26;-1:-1:-1;;;;;320:1036:29;1298:10:26;320:1036:29;;;1298:22:26;320:1036:29;;-1:-1:-1;;;;;;;;;;;1213:54:27;320:1036:29;;;;;;;;;;;;;;;-1:-1:-1;;320:1036:29;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;3436:53:26;;-1:-1:-1;;;;;320:1036:29;997:66:26;;1298:10;320:1036:29;;;1298:22:26;320:1036:29;;;;;1996:22:26;;;320:1036:29;;2146:8:26;3436:53;2093:32;3436:53;320:1036:29;3436:53:26;;320:1036:29;;;;;;;;;;;2093:32:26;-1:-1:-1;;;;;;;;;;;3751:57:26;3622:193;320:1036:29;;;-1:-1:-1;;;320:1036:29;;;;;;;;;;;;;;;;;-1:-1:-1;;;320:1036:29;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;320:1036:29;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;-1:-1:-1;;320:1036:29;;;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;320:1036:29;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;320:1036:29;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;320:1036:29;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1213:54:27;-1:-1:-1;;;;;;;;;;;1213:54:27;320:1036:29;;;1224:5;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;3751:57:26;320:1036:29;;;;-1:-1:-1;;320:1036:29;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;-1:-1:-1;;320:1036:29;;;;-1:-1:-1;;;;;;;;;;;3436:53:26;;-1:-1:-1;;;;;320:1036:29;1298:10:26;320:1036:29;;;1298:22:26;320:1036:29;;;3436:53:26;;1294:100;320:1036:29;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;320:1036:29;;;;:::o;:::-;;;:::o;845:407:30:-;-1:-1:-1;;;;;;;;;;;1213:54:27;845:407:30;;;-1:-1:-1;;;;;320:1036:29;;;1102:6:30;;;:::i;:::-;853:66:27;;1124:16:30;1120:125;;845:407;;;:::o;1120:125::-;-1:-1:-1;1176:26:30;;;;;;;;;;:::i;:::-;;320:1036:29;;;845:407:30:o;2021:77:31:-;-1:-1:-1;1213:54:27;-1:-1:-1;;;;;;;;;;;1213:54:27;1041:868:31;;;;;;;;;;-1:-1:-1;1041:868:31;;;;;;-1:-1:-1;1041:868:31;;;-1:-1:-1;1041:868:31;1419:155:27;1505:17;;;:::i;:::-;-1:-1:-1;;;;;320:1036:29;1539:27:27;;;;1419:155::o;1721:386::-;1818:29;;:33;320:1036:29;;-1:-1:-1;;;;;;;;;;;2034:66:27;1721:386::o;320:1036:29:-;;;-1:-1:-1;;;320:1036:29;;;;;;;;;;;;;;;;;;;;;;;;",
  "source": "pragma solidity ^0.8.24;\r\n\r\nimport \"./BaseAdminUpgradeabilityProxy.sol\";\r\nimport \"./InitializableUpgradeabilityProxy.sol\";\r\n\r\n/**\r\n * @title InitializableAdminUpgradeabilityProxy\r\n * @dev Extends from BaseAdminUpgradeabilityProxy with an initializer for \r\n * initializing the implementation, admin, and init data.\r\n */\r\ncontract InitializableAdminUpgradeabilityProxy is BaseAdminUpgradeabilityProxy, InitializableUpgradeabilityProxy {\r\n    /**\r\n   * Contract initializer.\r\n   * @param _logic address of the initial implementation.\r\n   * @param _admin Address of the proxy administrator.\r\n   * @param _data Data to send as msg.data to the implementation to initialize the proxied contract.\r\n   * It should include the signature and the parameters of the function to be called, as described in\r\n   * https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding.\r\n   * This parameter is optional, if no data is given the initialization call to proxied contract will be skipped.\r\n   */\r\n    function initialize(address _logic, address _admin, bytes memory _data) public payable {\r\n        require(_implementation() == address(0));\r\n        InitializableUpgradeabilityProxy.initialize(_logic, _data);\r\n        assert(ADMIN_SLOT == bytes32(uint256(keccak256(\"eip1967.proxy.admin\")) - 1));\r\n        _setAdmin(_admin);\r\n    }\r\n}\r\n",
  "sourcePath": "C:\\Proj\\fork-protocol\\contracts\\libraries\\openzeppelin-upgradeability\\InitializableAdminUpgradeabilityProxy.sol",
  "ast": {
    "absolutePath": "project:/contracts/libraries/openzeppelin-upgradeability/InitializableAdminUpgradeabilityProxy.sol",
    "exportedSymbols": {
      "Address": [
        15206
      ],
      "BaseAdminUpgradeabilityProxy": [
        10852
      ],
      "BaseUpgradeabilityProxy": [
        10918
      ],
      "InitializableAdminUpgradeabilityProxy": [
        11044
      ],
      "InitializableUpgradeabilityProxy": [
        11107
      ],
      "Proxy": [
        11143
      ],
      "UpgradeabilityProxy": [
        11196
      ]
    },
    "id": 11045,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10988,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:29"
      },
      {
        "absolutePath": "project:/contracts/libraries/openzeppelin-upgradeability/BaseAdminUpgradeabilityProxy.sol",
        "file": "./BaseAdminUpgradeabilityProxy.sol",
        "id": 10989,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 11045,
        "sourceUnit": 10853,
        "src": "28:44:29",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/libraries/openzeppelin-upgradeability/InitializableUpgradeabilityProxy.sol",
        "file": "./InitializableUpgradeabilityProxy.sol",
        "id": 10990,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 11045,
        "sourceUnit": 11108,
        "src": "74:48:29",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 10992,
              "name": "BaseAdminUpgradeabilityProxy",
              "nameLocations": [
                "370:28:29"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10852,
              "src": "370:28:29"
            },
            "id": 10993,
            "nodeType": "InheritanceSpecifier",
            "src": "370:28:29"
          },
          {
            "baseName": {
              "id": 10994,
              "name": "InitializableUpgradeabilityProxy",
              "nameLocations": [
                "400:32:29"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11107,
              "src": "400:32:29"
            },
            "id": 10995,
            "nodeType": "InheritanceSpecifier",
            "src": "400:32:29"
          }
        ],
        "canonicalName": "InitializableAdminUpgradeabilityProxy",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 10991,
          "nodeType": "StructuredDocumentation",
          "src": "126:192:29",
          "text": " @title InitializableAdminUpgradeabilityProxy\n @dev Extends from BaseAdminUpgradeabilityProxy with an initializer for \n initializing the implementation, admin, and init data."
        },
        "fullyImplemented": true,
        "id": 11044,
        "linearizedBaseContracts": [
          11044,
          11107,
          10852,
          10918,
          11143
        ],
        "name": "InitializableAdminUpgradeabilityProxy",
        "nameLocation": "329:37:29",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 11042,
              "nodeType": "Block",
              "src": "1110:243:29",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 11012,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 11006,
                            "name": "_implementation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              10881
                            ],
                            "referencedDeclaration": 10881,
                            "src": "1129:15:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 11007,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1129:17:29",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 11010,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1158:1:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 11009,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1150:7:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 11008,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1150:7:29",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 11011,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1150:10:29",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1129:31:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 11005,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1121:7:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 11013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1121:40:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11014,
                  "nodeType": "ExpressionStatement",
                  "src": "1121:40:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11018,
                        "name": "_logic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10998,
                        "src": "1216:6:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 11019,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11002,
                        "src": "1224:5:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 11015,
                        "name": "InitializableUpgradeabilityProxy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11107,
                        "src": "1172:32:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_InitializableUpgradeabilityProxy_$11107_$",
                          "typeString": "type(contract InitializableUpgradeabilityProxy)"
                        }
                      },
                      "id": 11017,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1205:10:29",
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11106,
                      "src": "1172:43:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory)"
                      }
                    },
                    "id": 11020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1172:58:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11021,
                  "nodeType": "ExpressionStatement",
                  "src": "1172:58:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 11035,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 11023,
                          "name": "ADMIN_SLOT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10705,
                          "src": "1248:10:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 11033,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "656970313936372e70726f78792e61646d696e",
                                        "id": 11029,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1288:21:29",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6104",
                                          "typeString": "literal_string \"eip1967.proxy.admin\""
                                        },
                                        "value": "eip1967.proxy.admin"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6104",
                                          "typeString": "literal_string \"eip1967.proxy.admin\""
                                        }
                                      ],
                                      "id": 11028,
                                      "name": "keccak256",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967288,
                                      "src": "1278:9:29",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                        "typeString": "function (bytes memory) pure returns (bytes32)"
                                      }
                                    },
                                    "id": 11030,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1278:32:29",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "id": 11027,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1270:7:29",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 11026,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1270:7:29",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 11031,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1270:41:29",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 11032,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1314:1:29",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "1270:45:29",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 11025,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1262:7:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 11024,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "1262:7:29",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 11034,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1262:54:29",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "1248:68:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 11022,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967293,
                      "src": "1241:6:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 11036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1241:76:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11037,
                  "nodeType": "ExpressionStatement",
                  "src": "1241:76:29"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11039,
                        "name": "_admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11000,
                        "src": "1338:6:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 11038,
                      "name": "_setAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10837,
                      "src": "1328:9:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 11040,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1328:17:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11041,
                  "nodeType": "ExpressionStatement",
                  "src": "1328:17:29"
                }
              ]
            },
            "documentation": {
              "id": 10996,
              "nodeType": "StructuredDocumentation",
              "src": "440:577:29",
              "text": " Contract initializer.\n @param _logic address of the initial implementation.\n @param _admin Address of the proxy administrator.\n @param _data Data to send as msg.data to the implementation to initialize the proxied contract.\n It should include the signature and the parameters of the function to be called, as described in\n https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding.\n This parameter is optional, if no data is given the initialization call to proxied contract will be skipped."
            },
            "functionSelector": "cf7a1d77",
            "id": 11043,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "nameLocation": "1032:10:29",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11003,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10998,
                  "mutability": "mutable",
                  "name": "_logic",
                  "nameLocation": "1051:6:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 11043,
                  "src": "1043:14:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10997,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1043:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11000,
                  "mutability": "mutable",
                  "name": "_admin",
                  "nameLocation": "1067:6:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 11043,
                  "src": "1059:14:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10999,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1059:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 11002,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "1088:5:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 11043,
                  "src": "1075:18:29",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 11001,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1075:5:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1042:52:29"
            },
            "returnParameters": {
              "id": 11004,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1110:0:29"
            },
            "scope": 11044,
            "src": "1023:330:29",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 11045,
        "src": "320:1036:29",
        "usedErrors": [],
        "usedEvents": [
          10701,
          10864
        ]
      }
    ],
    "src": "0:1358:29"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.24+commit.e11b9ed9.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.16",
  "updatedAt": "2024-02-11T21:41:58.786Z",
  "devdoc": {
    "details": "Extends from BaseAdminUpgradeabilityProxy with an initializer for  initializing the implementation, admin, and init data.",
    "events": {
      "AdminChanged(address,address)": {
        "details": "Emitted when the administration has been transferred.",
        "params": {
          "newAdmin": "Address of the new admin.",
          "previousAdmin": "Address of the previous admin."
        }
      },
      "Upgraded(address)": {
        "details": "Emitted when the implementation is upgraded.",
        "params": {
          "implementation": "Address of the new implementation."
        }
      }
    },
    "kind": "dev",
    "methods": {
      "admin()": {
        "returns": {
          "_0": "The address of the proxy admin."
        }
      },
      "changeAdmin(address)": {
        "details": "Changes the admin of the proxy. Only the current admin can call this function.",
        "params": {
          "newAdmin": "Address to transfer proxy administration to."
        }
      },
      "implementation()": {
        "returns": {
          "_0": "The address of the implementation."
        }
      },
      "initialize(address,address,bytes)": {
        "params": {
          "_admin": "Address of the proxy administrator.",
          "_data": "Data to send as msg.data to the implementation to initialize the proxied contract. It should include the signature and the parameters of the function to be called, as described in https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding. This parameter is optional, if no data is given the initialization call to proxied contract will be skipped.",
          "_logic": "address of the initial implementation."
        }
      },
      "initialize(address,bytes)": {
        "details": "Contract initializer.",
        "params": {
          "_data": "Data to send as msg.data to the implementation to initialize the proxied contract. It should include the signature and the parameters of the function to be called, as described in https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding. This parameter is optional, if no data is given the initialization call to proxied contract will be skipped.",
          "_logic": "Address of the initial implementation."
        }
      },
      "upgradeTo(address)": {
        "details": "Upgrade the backing implementation of the proxy. Only the admin can call this function.",
        "params": {
          "newImplementation": "Address of the new implementation."
        }
      },
      "upgradeToAndCall(address,bytes)": {
        "details": "Upgrade the backing implementation of the proxy and call a function on the new implementation. This is useful to initialize the proxied contract.",
        "params": {
          "data": "Data to send as msg.data in the low level call. It should include the signature and the parameters of the function to be called, as described in https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding.",
          "newImplementation": "Address of the new implementation."
        }
      }
    },
    "title": "InitializableAdminUpgradeabilityProxy",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "initialize(address,address,bytes)": {
        "notice": "Contract initializer."
      }
    },
    "version": 1
  }
}