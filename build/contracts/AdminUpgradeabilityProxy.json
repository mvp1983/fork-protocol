{
  "contractName": "AdminUpgradeabilityProxy",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_logic",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "AdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "implementation",
          "type": "address"
        }
      ],
      "name": "Upgraded",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newAdmin",
          "type": "address"
        }
      ],
      "name": "changeAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "implementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        }
      ],
      "name": "upgradeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newImplementation",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "upgradeToAndCall",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_logic\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"changeAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgradeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extends from BaseAdminUpgradeabilityProxy with a constructor for  initializing the implementation, admin, and init data.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the administration has been transferred.\",\"params\":{\"newAdmin\":\"Address of the new admin.\",\"previousAdmin\":\"Address of the previous admin.\"}},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\",\"params\":{\"implementation\":\"Address of the new implementation.\"}}},\"kind\":\"dev\",\"methods\":{\"admin()\":{\"returns\":{\"_0\":\"The address of the proxy admin.\"}},\"changeAdmin(address)\":{\"details\":\"Changes the admin of the proxy. Only the current admin can call this function.\",\"params\":{\"newAdmin\":\"Address to transfer proxy administration to.\"}},\"constructor\":{\"params\":{\"_admin\":\"Address of the proxy administrator.\",\"_data\":\"Data to send as msg.data to the implementation to initialize the proxied contract. It should include the signature and the parameters of the function to be called, as described in https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding. This parameter is optional, if no data is given the initialization call to proxied contract will be skipped.\",\"_logic\":\"address of the initial implementation.\"}},\"implementation()\":{\"returns\":{\"_0\":\"The address of the implementation.\"}},\"upgradeTo(address)\":{\"details\":\"Upgrade the backing implementation of the proxy. Only the admin can call this function.\",\"params\":{\"newImplementation\":\"Address of the new implementation.\"}},\"upgradeToAndCall(address,bytes)\":{\"details\":\"Upgrade the backing implementation of the proxy and call a function on the new implementation. This is useful to initialize the proxied contract.\",\"params\":{\"data\":\"Data to send as msg.data in the low level call. It should include the signature and the parameters of the function to be called, as described in https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding.\",\"newImplementation\":\"Address of the new implementation.\"}}},\"title\":\"AdminUpgradeabilityProxy\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Contract constructor.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/libraries/openzeppelin-upgradeability/AdminUpgradeabilityProxy.sol\":\"AdminUpgradeabilityProxy\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"project:/contracts/libraries/openzeppelin-upgradeability/AdminUpgradeabilityProxy.sol\":{\"keccak256\":\"0x5ff575932a68801b7309b1f54f4fecb14cb787700ca07bddf07124034fcb08ed\",\"urls\":[\"bzz-raw://a1123ecb1c518e63a9c2066bc8db5741cc8aa1f2d12e9884374fcada7ee8a9b3\",\"dweb:/ipfs/QmSUNV6CXdZ8NeUKipafW2cCaVeCPi1K9UmDkg4c5ihgZF\"]},\"project:/contracts/libraries/openzeppelin-upgradeability/BaseAdminUpgradeabilityProxy.sol\":{\"keccak256\":\"0x1b09170a1823d0c827aed11c4478858b1064d0b35b650f5bc9fa3486719b7abb\",\"urls\":[\"bzz-raw://2195115ec841f27abfcdbc3e8fa232300bde463d64ad9ec88f1b13a7ff59f90d\",\"dweb:/ipfs/QmZooDusYRHQmxeqffRhd42TomvL7FMZCC93opACYtZ8qg\"]},\"project:/contracts/libraries/openzeppelin-upgradeability/BaseUpgradeabilityProxy.sol\":{\"keccak256\":\"0xf200004a6699b534c4e47b0585a44ec4882b07931469aa0e3b5a863c610ca4b0\",\"urls\":[\"bzz-raw://67a250e161a80f00ccf93c82cf9d3345b4f30ff3f66ebaedd5f507ffe2034cd7\",\"dweb:/ipfs/QmXHzEYzmjJkY8JNbzq9k8rRa862eAJXrXNad3Ccxvf5f9\"]},\"project:/contracts/libraries/openzeppelin-upgradeability/Proxy.sol\":{\"keccak256\":\"0x00c8bd0053e20a3f31d460c3ad5a125c67b684eb530661bef941da93fb62649a\",\"urls\":[\"bzz-raw://9e91e67934017b49562cd67b14a8cbedee9e45fa41f9aa760cb46004f2b11b7d\",\"dweb:/ipfs/QmXLLkKcm1xBfgxn86v1RuLv5VKAx3MVuMYznVMpMkidNz\"]},\"project:/contracts/libraries/openzeppelin-upgradeability/UpgradeabilityProxy.sol\":{\"keccak256\":\"0x3a9343c7ddaa8782d72b21720f10d5878e8d9b02f1c435e9dc2aa1d66b862de5\",\"urls\":[\"bzz-raw://bd549905126766d57a818f4240e60f0ea1795846e274c6006e348bba7e3f07ab\",\"dweb:/ipfs/QmZAbFy3T7mDUKnszH9d8BSW772wVxDtjBjpLdVdFCuZ4A\"]},\"project:/lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x0e0796517afb4347534d93ede634036a1621b8486f06501847402357498c0726\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6a3961c19e2887a4fff4644e5284b53d1202e899e161b68771304bfc74bade6\",\"dweb:/ipfs/Qmb1Di8UfhT9QdBAPGiDBX8FYoR9tXd1YWUTUup8GGhg21\"]}},\"version\":1}",
  "bytecode": "0x60806040526106c080380380610014816101b2565b92833981016060828203126101295761002c826101eb565b60209161003a8385016101eb565b604085015190946001600160401b038211610129570181601f820112156101295780519061006f61006a836101ff565b6101b2565b928284528583830101116101295784905f5b83811061019e5750505f9183010152813b1561013357817f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc558051806100f4575b847fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103556040516104a5908161021b8239f35b5f9284849301905af4903d1561012d575f3d9161011361006a846101ff565b9283523d92013e5b15610129575f8080806100c2565b5f80fd5b5061011b565b60405162461bcd60e51b815260048101849052603b60248201527f43616e6e6f742073657420612070726f787920696d706c656d656e746174696f60448201527f6e20746f2061206e6f6e2d636f6e7472616374206164647265737300000000006064820152608490fd5b818101830151858201840152869201610081565b6040519190601f01601f191682016001600160401b038111838210176101d757604052565b634e487b7160e01b5f52604160045260245ffd5b51906001600160a01b038216820361012957565b6001600160401b0381116101d757601f01601f19166020019056fe60806040526004361061034c575f3560e01c80633659cfe61461005b5780634f1ef286146100565780635c60da1b146100515780638f2839701461004c5763f851a4400361034c576102f1565b6101fe565b61019f565b6100be565b346100a45760203660031901126100a4576100746100a8565b5f8051602061045083398151915254336001600160a01b039091160361009f5761009d9061038a565b005b61034c565b5f80fd5b600435906001600160a01b03821682036100a457565b60403660031901126100a4576100d26100a8565b67ffffffffffffffff906024358281116100a457366023820112156100a4578060040135918383116100a45736602484840101116100a4575f8051602061045083398151915254336001600160a01b039091160361009f5760245f9392849361013a8461038a565b80604051938493018337810184815203915af43d15610195573d82811161019057601f199060405191603f81601f8401160116820193828510908511176101905761009d9360405281525f60203d92013e610345565b610331565b61009d9150610345565b346100a4575f3660031901126100a4575f80516020610450833981519152546001600160a01b0390339082160361009f577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5460405191168152602090f35b346100a45760203660031901126100a4576102176100a8565b5f8051602061045083398151915280546001600160a01b03929190339084160361009f5782821690811561028d5761009d937f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f9260409254918351921682526020820152a15f8051602061045083398151915255565b60405162461bcd60e51b815260206004820152603660248201527f43616e6e6f74206368616e6765207468652061646d696e206f6620612070726f604482015275787920746f20746865207a65726f206164647265737360501b6064820152608490fd5b346100a4575f3660031901126100a4575f8051602061045083398151915280546001600160a01b0390339082160361009f57602091549060405191168152f35b634e487b7160e01b5f52604160045260245ffd5b156100a457565b5f807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54368280378136915af43d5f803e15610386573d5ff35b3d5ffd5b803b156103e4577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8190556001600160a01b03167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b5f80a2565b60405162461bcd60e51b815260206004820152603b60248201527f43616e6e6f742073657420612070726f787920696d706c656d656e746174696f60448201527f6e20746f2061206e6f6e2d636f6e7472616374206164647265737300000000006064820152608490fdfeb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103a2646970667358221220064829fff59d6feccbbcb33bc6495183d454f9d66879127775d552f21281e52f64736f6c63430008180033",
  "deployedBytecode": "0x60806040526004361061034c575f3560e01c80633659cfe61461005b5780634f1ef286146100565780635c60da1b146100515780638f2839701461004c5763f851a4400361034c576102f1565b6101fe565b61019f565b6100be565b346100a45760203660031901126100a4576100746100a8565b5f8051602061045083398151915254336001600160a01b039091160361009f5761009d9061038a565b005b61034c565b5f80fd5b600435906001600160a01b03821682036100a457565b60403660031901126100a4576100d26100a8565b67ffffffffffffffff906024358281116100a457366023820112156100a4578060040135918383116100a45736602484840101116100a4575f8051602061045083398151915254336001600160a01b039091160361009f5760245f9392849361013a8461038a565b80604051938493018337810184815203915af43d15610195573d82811161019057601f199060405191603f81601f8401160116820193828510908511176101905761009d9360405281525f60203d92013e610345565b610331565b61009d9150610345565b346100a4575f3660031901126100a4575f80516020610450833981519152546001600160a01b0390339082160361009f577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5460405191168152602090f35b346100a45760203660031901126100a4576102176100a8565b5f8051602061045083398151915280546001600160a01b03929190339084160361009f5782821690811561028d5761009d937f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f9260409254918351921682526020820152a15f8051602061045083398151915255565b60405162461bcd60e51b815260206004820152603660248201527f43616e6e6f74206368616e6765207468652061646d696e206f6620612070726f604482015275787920746f20746865207a65726f206164647265737360501b6064820152608490fd5b346100a4575f3660031901126100a4575f8051602061045083398151915280546001600160a01b0390339082160361009f57602091549060405191168152f35b634e487b7160e01b5f52604160045260245ffd5b156100a457565b5f807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc54368280378136915af43d5f803e15610386573d5ff35b3d5ffd5b803b156103e4577f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8190556001600160a01b03167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b5f80a2565b60405162461bcd60e51b815260206004820152603b60248201527f43616e6e6f742073657420612070726f787920696d706c656d656e746174696f60448201527f6e20746f2061206e6f6e2d636f6e7472616374206164647265737300000000006064820152608490fdfeb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103a2646970667358221220064829fff59d6feccbbcb33bc6495183d454f9d66879127775d552f21281e52f64736f6c63430008180033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "256:910:25:-:0;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;256:910:25;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;256:910:25;;;;;;;;-1:-1:-1;256:910:25;;;;;1818:29:27;;:33;256:910:25;;2034:66:27;853;2034;853;;1031:16:32;1027:125;;256:910:25;3751:57:26;997:66;3751:57;256:910:25;;;;;;;;;1027:125:32;-1:-1:-1;256:910:25;;;;;1083:26:32;;;853:66:27;;;;;-1:-1:-1;853:66:27;;;;;;:::i;:::-;;;;;;;;;;;;1027:125:32;;;;;;853:66:27;-1:-1:-1;853:66:27;;;;;;256:910:25;;;-1:-1:-1;;;256:910:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;256:910:25;;;-1:-1:-1;;;;;256:910:25;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;256:910:25;;;;;;:::o;:::-;-1:-1:-1;;;;;256:910:25;;;;;;-1:-1:-1;;256:910:25;;;;:::o",
  "deployedSourceMap": "256:910:25:-:0;;;;;;446:58:31;256:910:25;;;;;;;;;;;;;;;;;;;;;;;;;;;446:58:31;256:910:25;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;;;-1:-1:-1;;256:910:25;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;3436:53:26;1298:10;-1:-1:-1;;;;;256:910:25;;;1298:22:26;256:910:25;;2443:17:26;;;:::i;:::-;256:910:25;1294:100:26;;:::i;256:910:25:-;;;;;;;;-1:-1:-1;;;;;256:910:25;;;;;;:::o;:::-;;;-1:-1:-1;;256:910:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;3436:53:26;1298:10;-1:-1:-1;;;;;256:910:25;;;1298:22:26;256:910:25;;;-1:-1:-1;3122:17:26;;;;;;;:::i;:::-;256:910:25;;;;;;;;;;;;;;3170:36:26;;;;256:910:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3217:16:26;256:910:25;;;;;-1:-1:-1;256:910:25;;;;;3217:16:26;:::i;256:910:25:-;;:::i;:::-;3217:16:26;256:910:25;;3217:16:26;:::i;256:910:25:-;;;;;;-1:-1:-1;;256:910:25;;;;-1:-1:-1;;;;;;;;;;;3436:53:26;-1:-1:-1;;;;;256:910:25;1298:10:26;256:910:25;;;1298:22:26;256:910:25;;853:66:27;1213:54;256:910:25;;;;;;;;;;;;;;;-1:-1:-1;;256:910:25;;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;3436:53:26;;-1:-1:-1;;;;;256:910:25;997:66:26;;1298:10;256:910:25;;;1298:22:26;256:910:25;;;;;1996:22:26;;;256:910:25;;2146:8:26;3436:53;2093:32;3436:53;256:910:25;3436:53:26;;256:910:25;;;;;;;;;;;2093:32:26;-1:-1:-1;;;;;;;;;;;3751:57:26;3622:193;256:910:25;;;-1:-1:-1;;;256:910:25;;;;;;;;;;;;;;;;;-1:-1:-1;;;256:910:25;;;;;;;;;;;;;-1:-1:-1;;256:910:25;;;;-1:-1:-1;;;;;;;;;;;3436:53:26;;-1:-1:-1;;;;;256:910:25;1298:10:26;256:910:25;;;1298:22:26;256:910:25;;;3436:53:26;;1294:100;256:910:25;;;;;;;;;;;;;;;;;;;;;;;:::o;2021:77:31:-;-1:-1:-1;1213:54:27;853:66;1213:54;1041:868:31;;;;;;;;;;-1:-1:-1;1041:868:31;;;;;;-1:-1:-1;1041:868:31;;;-1:-1:-1;1041:868:31;1419:155:27;1818:29;;:33;256:910:25;;853:66:27;2034;;;-1:-1:-1;;;;;256:910:25;1539:27:27;1850:1;;1539:27;1419:155::o;256:910:25:-;;;-1:-1:-1;;;256:910:25;;;;;;;;;;;;;;;;;;;;;;;;",
  "source": "pragma solidity ^0.8.24;\r\n\r\nimport \"./BaseAdminUpgradeabilityProxy.sol\";\r\n\r\n/**\r\n * @title AdminUpgradeabilityProxy\r\n * @dev Extends from BaseAdminUpgradeabilityProxy with a constructor for \r\n * initializing the implementation, admin, and init data.\r\n */\r\ncontract AdminUpgradeabilityProxy is BaseAdminUpgradeabilityProxy, UpgradeabilityProxy {\r\n    /**\r\n   * Contract constructor.\r\n   * @param _logic address of the initial implementation.\r\n   * @param _admin Address of the proxy administrator.\r\n   * @param _data Data to send as msg.data to the implementation to initialize the proxied contract.\r\n   * It should include the signature and the parameters of the function to be called, as described in\r\n   * https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding.\r\n   * This parameter is optional, if no data is given the initialization call to proxied contract will be skipped.\r\n   */\r\n    constructor(address _logic, address _admin, bytes memory _data) payable UpgradeabilityProxy(_logic, _data) {\r\n        assert(ADMIN_SLOT == bytes32(uint256(keccak256(\"eip1967.proxy.admin\")) - 1));\r\n        _setAdmin(_admin);\r\n    }\r\n}\r\n",
  "sourcePath": "C:\\Proj\\fork-protocol\\contracts\\libraries\\openzeppelin-upgradeability\\AdminUpgradeabilityProxy.sol",
  "ast": {
    "absolutePath": "project:/contracts/libraries/openzeppelin-upgradeability/AdminUpgradeabilityProxy.sol",
    "exportedSymbols": {
      "Address": [
        15206
      ],
      "AdminUpgradeabilityProxy": [
        10688
      ],
      "BaseAdminUpgradeabilityProxy": [
        10852
      ],
      "BaseUpgradeabilityProxy": [
        10918
      ],
      "Proxy": [
        11143
      ],
      "UpgradeabilityProxy": [
        11196
      ]
    },
    "id": 10689,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10646,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:25"
      },
      {
        "absolutePath": "project:/contracts/libraries/openzeppelin-upgradeability/BaseAdminUpgradeabilityProxy.sol",
        "file": "./BaseAdminUpgradeabilityProxy.sol",
        "id": 10647,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10689,
        "sourceUnit": 10853,
        "src": "28:44:25",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 10649,
              "name": "BaseAdminUpgradeabilityProxy",
              "nameLocations": [
                "293:28:25"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10852,
              "src": "293:28:25"
            },
            "id": 10650,
            "nodeType": "InheritanceSpecifier",
            "src": "293:28:25"
          },
          {
            "baseName": {
              "id": 10651,
              "name": "UpgradeabilityProxy",
              "nameLocations": [
                "323:19:25"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11196,
              "src": "323:19:25"
            },
            "id": 10652,
            "nodeType": "InheritanceSpecifier",
            "src": "323:19:25"
          }
        ],
        "canonicalName": "AdminUpgradeabilityProxy",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 10648,
          "nodeType": "StructuredDocumentation",
          "src": "76:178:25",
          "text": " @title AdminUpgradeabilityProxy\n @dev Extends from BaseAdminUpgradeabilityProxy with a constructor for \n initializing the implementation, admin, and init data."
        },
        "fullyImplemented": true,
        "id": 10688,
        "linearizedBaseContracts": [
          10688,
          11196,
          10852,
          10918,
          11143
        ],
        "name": "AdminUpgradeabilityProxy",
        "nameLocation": "265:24:25",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 10686,
              "nodeType": "Block",
              "src": "1040:123:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 10679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10667,
                          "name": "ADMIN_SLOT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10705,
                          "src": "1058:10:25",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 10677,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "656970313936372e70726f78792e61646d696e",
                                        "id": 10673,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1098:21:25",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_stringliteral_b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6104",
                                          "typeString": "literal_string \"eip1967.proxy.admin\""
                                        },
                                        "value": "eip1967.proxy.admin"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_stringliteral_b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6104",
                                          "typeString": "literal_string \"eip1967.proxy.admin\""
                                        }
                                      ],
                                      "id": 10672,
                                      "name": "keccak256",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967288,
                                      "src": "1088:9:25",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                        "typeString": "function (bytes memory) pure returns (bytes32)"
                                      }
                                    },
                                    "id": 10674,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1088:32:25",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "id": 10671,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1080:7:25",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 10670,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1080:7:25",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 10675,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1080:41:25",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 10676,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1124:1:25",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "1080:45:25",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 10669,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1072:7:25",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes32_$",
                              "typeString": "type(bytes32)"
                            },
                            "typeName": {
                              "id": 10668,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "1072:7:25",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 10678,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1072:54:25",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "1058:68:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 10666,
                      "name": "assert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967293,
                      "src": "1051:6:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 10680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1051:76:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10681,
                  "nodeType": "ExpressionStatement",
                  "src": "1051:76:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10683,
                        "name": "_admin",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10657,
                        "src": "1148:6:25",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10682,
                      "name": "_setAdmin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10837,
                      "src": "1138:9:25",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 10684,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1138:17:25",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10685,
                  "nodeType": "ExpressionStatement",
                  "src": "1138:17:25"
                }
              ]
            },
            "documentation": {
              "id": 10653,
              "nodeType": "StructuredDocumentation",
              "src": "350:577:25",
              "text": " Contract constructor.\n @param _logic address of the initial implementation.\n @param _admin Address of the proxy administrator.\n @param _data Data to send as msg.data to the implementation to initialize the proxied contract.\n It should include the signature and the parameters of the function to be called, as described in\n https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding.\n This parameter is optional, if no data is given the initialization call to proxied contract will be skipped."
            },
            "id": 10687,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 10662,
                    "name": "_logic",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10655,
                    "src": "1025:6:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 10663,
                    "name": "_data",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10659,
                    "src": "1033:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  }
                ],
                "id": 10664,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 10661,
                  "name": "UpgradeabilityProxy",
                  "nameLocations": [
                    "1005:19:25"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11196,
                  "src": "1005:19:25"
                },
                "nodeType": "ModifierInvocation",
                "src": "1005:34:25"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10660,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10655,
                  "mutability": "mutable",
                  "name": "_logic",
                  "nameLocation": "953:6:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 10687,
                  "src": "945:14:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10654,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "945:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10657,
                  "mutability": "mutable",
                  "name": "_admin",
                  "nameLocation": "969:6:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 10687,
                  "src": "961:14:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10656,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "961:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10659,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "990:5:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 10687,
                  "src": "977:18:25",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 10658,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "977:5:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "944:52:25"
            },
            "returnParameters": {
              "id": 10665,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1040:0:25"
            },
            "scope": 10688,
            "src": "933:230:25",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 10689,
        "src": "256:910:25",
        "usedErrors": [],
        "usedEvents": [
          10701,
          10864
        ]
      }
    ],
    "src": "0:1168:25"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.24+commit.e11b9ed9.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.16",
  "updatedAt": "2024-02-11T21:41:58.772Z",
  "devdoc": {
    "details": "Extends from BaseAdminUpgradeabilityProxy with a constructor for  initializing the implementation, admin, and init data.",
    "events": {
      "AdminChanged(address,address)": {
        "details": "Emitted when the administration has been transferred.",
        "params": {
          "newAdmin": "Address of the new admin.",
          "previousAdmin": "Address of the previous admin."
        }
      },
      "Upgraded(address)": {
        "details": "Emitted when the implementation is upgraded.",
        "params": {
          "implementation": "Address of the new implementation."
        }
      }
    },
    "kind": "dev",
    "methods": {
      "admin()": {
        "returns": {
          "_0": "The address of the proxy admin."
        }
      },
      "changeAdmin(address)": {
        "details": "Changes the admin of the proxy. Only the current admin can call this function.",
        "params": {
          "newAdmin": "Address to transfer proxy administration to."
        }
      },
      "constructor": {
        "params": {
          "_admin": "Address of the proxy administrator.",
          "_data": "Data to send as msg.data to the implementation to initialize the proxied contract. It should include the signature and the parameters of the function to be called, as described in https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding. This parameter is optional, if no data is given the initialization call to proxied contract will be skipped.",
          "_logic": "address of the initial implementation."
        }
      },
      "implementation()": {
        "returns": {
          "_0": "The address of the implementation."
        }
      },
      "upgradeTo(address)": {
        "details": "Upgrade the backing implementation of the proxy. Only the admin can call this function.",
        "params": {
          "newImplementation": "Address of the new implementation."
        }
      },
      "upgradeToAndCall(address,bytes)": {
        "details": "Upgrade the backing implementation of the proxy and call a function on the new implementation. This is useful to initialize the proxied contract.",
        "params": {
          "data": "Data to send as msg.data in the low level call. It should include the signature and the parameters of the function to be called, as described in https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding.",
          "newImplementation": "Address of the new implementation."
        }
      }
    },
    "title": "AdminUpgradeabilityProxy",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "constructor": {
        "notice": "Contract constructor."
      }
    },
    "version": 1
  }
}