{
  "contractName": "VersionedInitializable",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Aave, inspired by the OpenZeppelin Initializable contract\",\"details\":\"Helper contract to support initializer functions. To use it, replace the constructor with a function that has the `initializer` modifier. WARNING: Unlike constructors, initializer functions must be manually invoked. This applies both to deploying an Initializable contract, as well as extending an Initializable contract via inheritance. WARNING: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or ensure that all initializers are idempotent, because this is not dealt with automatically as with constructors.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"},\"lastInitializedRevision\":{\"details\":\"Indicates that the contract has been initialized.\"}},\"title\":\"VersionedInitializable\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/libraries/openzeppelin-upgradeability/VersionedInitializable.sol\":\"VersionedInitializable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"project:/contracts/libraries/openzeppelin-upgradeability/VersionedInitializable.sol\":{\"keccak256\":\"0xb6e258cf3ef05a371fe1a178adb56af0cc81d72f29f28152b3d6ec3f4a30cc9e\",\"urls\":[\"bzz-raw://9999518960708c3aadc8ead740228d5193430a2798e9b877be30a4c0b95a6905\",\"dweb:/ipfs/Qmc27Bz6sVCceye882eaHMntMsc9gph3ZLSb6Q1CTY2ka2\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity >=0.4.24 <0.9.0;\r\n\r\n/**\r\n * @title VersionedInitializable\r\n *\r\n * @dev Helper contract to support initializer functions. To use it, replace\r\n * the constructor with a function that has the `initializer` modifier.\r\n * WARNING: Unlike constructors, initializer functions must be manually\r\n * invoked. This applies both to deploying an Initializable contract, as well\r\n * as extending an Initializable contract via inheritance.\r\n * WARNING: When used with inheritance, manual care must be taken to not invoke\r\n * a parent initializer twice, or ensure that all initializers are idempotent,\r\n * because this is not dealt with automatically as with constructors.\r\n *\r\n * @author Aave, inspired by the OpenZeppelin Initializable contract\r\n */\r\nabstract contract VersionedInitializable {\r\n    /**\r\n   * @dev Indicates that the contract has been initialized.\r\n   */\r\n    uint256 private lastInitializedRevision = 0;\r\n\r\n    /**\r\n   * @dev Indicates that the contract is in the process of being initialized.\r\n   */\r\n    bool private initializing;\r\n\r\n    /**\r\n   * @dev Modifier to use in the initializer function of a contract.\r\n   */\r\n    modifier initializer() {\r\n        uint256 revision = getRevision();\r\n        require(initializing || isConstructor() || revision > lastInitializedRevision, \"Contract instance has already been initialized\");\r\n\r\n        bool isTopLevelCall = !initializing;\r\n        if (isTopLevelCall) {\r\n            initializing = true;\r\n            lastInitializedRevision = revision;\r\n        }\r\n\r\n        _;\r\n\r\n        if (isTopLevelCall) {\r\n            initializing = false;\r\n        }\r\n    }\r\n\r\n    /// @dev returns the revision number of the contract.\r\n    /// Needs to be defined in the inherited class as a constant.\r\n    function getRevision() internal virtual pure returns(uint256);\r\n\r\n\r\n    /// @dev Returns true if and only if the function is running in the constructor\r\n    function isConstructor() private view returns (bool) {\r\n        // extcodesize checks the size of the code stored in an address, and\r\n        // address returns the current address. Since the code is still not\r\n        // deployed when running a constructor, any checks on its code size will\r\n        // yield zero, making it an effective way to detect if a contract is\r\n        // under construction or not.\r\n        uint256 cs;\r\n        //solium-disable-next-line\r\n        assembly {\r\n            cs := extcodesize(address())\r\n        }\r\n        return cs == 0;\r\n    }\r\n\r\n    // Reserved storage space to allow for layout changes in the future.\r\n    uint256[50] private ______gap;\r\n}\r\n",
  "sourcePath": "C:\\Proj\\fork-protocol\\contracts\\libraries\\openzeppelin-upgradeability\\VersionedInitializable.sol",
  "ast": {
    "absolutePath": "project:/contracts/libraries/openzeppelin-upgradeability/VersionedInitializable.sol",
    "exportedSymbols": {
      "VersionedInitializable": [
        11277
      ]
    },
    "id": 11278,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 11198,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".24",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:33"
      },
      {
        "abstract": true,
        "baseContracts": [],
        "canonicalName": "VersionedInitializable",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 11199,
          "nodeType": "StructuredDocumentation",
          "src": "36:715:33",
          "text": " @title VersionedInitializable\n @dev Helper contract to support initializer functions. To use it, replace\n the constructor with a function that has the `initializer` modifier.\n WARNING: Unlike constructors, initializer functions must be manually\n invoked. This applies both to deploying an Initializable contract, as well\n as extending an Initializable contract via inheritance.\n WARNING: When used with inheritance, manual care must be taken to not invoke\n a parent initializer twice, or ensure that all initializers are idempotent,\n because this is not dealt with automatically as with constructors.\n @author Aave, inspired by the OpenZeppelin Initializable contract"
        },
        "fullyImplemented": false,
        "id": 11277,
        "linearizedBaseContracts": [
          11277
        ],
        "name": "VersionedInitializable",
        "nameLocation": "771:22:33",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 11200,
              "nodeType": "StructuredDocumentation",
              "src": "801:71:33",
              "text": " @dev Indicates that the contract has been initialized."
            },
            "id": 11203,
            "mutability": "mutable",
            "name": "lastInitializedRevision",
            "nameLocation": "894:23:33",
            "nodeType": "VariableDeclaration",
            "scope": 11277,
            "src": "878:43:33",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11201,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "878:7:33",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 11202,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "920:1:33",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "documentation": {
              "id": 11204,
              "nodeType": "StructuredDocumentation",
              "src": "930:89:33",
              "text": " @dev Indicates that the contract is in the process of being initialized."
            },
            "id": 11206,
            "mutability": "mutable",
            "name": "initializing",
            "nameLocation": "1038:12:33",
            "nodeType": "VariableDeclaration",
            "scope": 11277,
            "src": "1025:25:33",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 11205,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1025:4:33",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 11250,
              "nodeType": "Block",
              "src": "1168:456:33",
              "statements": [
                {
                  "assignments": [
                    11210
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11210,
                      "mutability": "mutable",
                      "name": "revision",
                      "nameLocation": "1187:8:33",
                      "nodeType": "VariableDeclaration",
                      "scope": 11250,
                      "src": "1179:16:33",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11209,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1179:7:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11213,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 11211,
                      "name": "getRevision",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11257,
                      "src": "1198:11:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$__$returns$_t_uint256_$",
                        "typeString": "function () pure returns (uint256)"
                      }
                    },
                    "id": 11212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1198:13:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1179:32:33"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 11222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 11218,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 11215,
                            "name": "initializing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11206,
                            "src": "1230:12:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 11216,
                              "name": "isConstructor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 11272,
                              "src": "1246:13:33",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                "typeString": "function () view returns (bool)"
                              }
                            },
                            "id": 11217,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1246:15:33",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "1230:31:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 11221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 11219,
                            "name": "revision",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11210,
                            "src": "1265:8:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 11220,
                            "name": "lastInitializedRevision",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11203,
                            "src": "1276:23:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1265:34:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1230:69:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564",
                        "id": 11223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1301:48:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9fbba6c4dcac9134893b633b9564f36435b3f927c1d5fa152c5c14b20cecb1a4",
                          "typeString": "literal_string \"Contract instance has already been initialized\""
                        },
                        "value": "Contract instance has already been initialized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9fbba6c4dcac9134893b633b9564f36435b3f927c1d5fa152c5c14b20cecb1a4",
                          "typeString": "literal_string \"Contract instance has already been initialized\""
                        }
                      ],
                      "id": 11214,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1222:7:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1222:128:33",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11225,
                  "nodeType": "ExpressionStatement",
                  "src": "1222:128:33"
                },
                {
                  "assignments": [
                    11227
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11227,
                      "mutability": "mutable",
                      "name": "isTopLevelCall",
                      "nameLocation": "1368:14:33",
                      "nodeType": "VariableDeclaration",
                      "scope": 11250,
                      "src": "1363:19:33",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 11226,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1363:4:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11230,
                  "initialValue": {
                    "id": 11229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1385:13:33",
                    "subExpression": {
                      "id": 11228,
                      "name": "initializing",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11206,
                      "src": "1386:12:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1363:35:33"
                },
                {
                  "condition": {
                    "id": 11231,
                    "name": "isTopLevelCall",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11227,
                    "src": "1413:14:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11241,
                  "nodeType": "IfStatement",
                  "src": "1409:115:33",
                  "trueBody": {
                    "id": 11240,
                    "nodeType": "Block",
                    "src": "1429:95:33",
                    "statements": [
                      {
                        "expression": {
                          "id": 11234,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 11232,
                            "name": "initializing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11206,
                            "src": "1444:12:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 11233,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1459:4:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1444:19:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 11235,
                        "nodeType": "ExpressionStatement",
                        "src": "1444:19:33"
                      },
                      {
                        "expression": {
                          "id": 11238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 11236,
                            "name": "lastInitializedRevision",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11203,
                            "src": "1478:23:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 11237,
                            "name": "revision",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11210,
                            "src": "1504:8:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1478:34:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 11239,
                        "nodeType": "ExpressionStatement",
                        "src": "1478:34:33"
                      }
                    ]
                  }
                },
                {
                  "id": 11242,
                  "nodeType": "PlaceholderStatement",
                  "src": "1536:1:33"
                },
                {
                  "condition": {
                    "id": 11243,
                    "name": "isTopLevelCall",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11227,
                    "src": "1554:14:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 11249,
                  "nodeType": "IfStatement",
                  "src": "1550:67:33",
                  "trueBody": {
                    "id": 11248,
                    "nodeType": "Block",
                    "src": "1570:47:33",
                    "statements": [
                      {
                        "expression": {
                          "id": 11246,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 11244,
                            "name": "initializing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11206,
                            "src": "1585:12:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 11245,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1600:5:33",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "1585:20:33",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 11247,
                        "nodeType": "ExpressionStatement",
                        "src": "1585:20:33"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 11207,
              "nodeType": "StructuredDocumentation",
              "src": "1059:80:33",
              "text": " @dev Modifier to use in the initializer function of a contract."
            },
            "id": 11251,
            "name": "initializer",
            "nameLocation": "1154:11:33",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 11208,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1165:2:33"
            },
            "src": "1145:479:33",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "documentation": {
              "id": 11252,
              "nodeType": "StructuredDocumentation",
              "src": "1632:120:33",
              "text": "@dev returns the revision number of the contract.\n Needs to be defined in the inherited class as a constant."
            },
            "id": 11257,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getRevision",
            "nameLocation": "1767:11:33",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11253,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1778:2:33"
            },
            "returnParameters": {
              "id": 11256,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11255,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11257,
                  "src": "1811:7:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 11254,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1811:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1810:9:33"
            },
            "scope": 11277,
            "src": "1758:62:33",
            "stateMutability": "pure",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 11271,
              "nodeType": "Block",
              "src": "1968:517:33",
              "statements": [
                {
                  "assignments": [
                    11264
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 11264,
                      "mutability": "mutable",
                      "name": "cs",
                      "nameLocation": "2341:2:33",
                      "nodeType": "VariableDeclaration",
                      "scope": 11271,
                      "src": "2333:10:33",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 11263,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2333:7:33",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 11265,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2333:10:33"
                },
                {
                  "AST": {
                    "nativeSrc": "2399:54:33",
                    "nodeType": "YulBlock",
                    "src": "2399:54:33",
                    "statements": [
                      {
                        "nativeSrc": "2414:28:33",
                        "nodeType": "YulAssignment",
                        "src": "2414:28:33",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "address",
                                "nativeSrc": "2432:7:33",
                                "nodeType": "YulIdentifier",
                                "src": "2432:7:33"
                              },
                              "nativeSrc": "2432:9:33",
                              "nodeType": "YulFunctionCall",
                              "src": "2432:9:33"
                            }
                          ],
                          "functionName": {
                            "name": "extcodesize",
                            "nativeSrc": "2420:11:33",
                            "nodeType": "YulIdentifier",
                            "src": "2420:11:33"
                          },
                          "nativeSrc": "2420:22:33",
                          "nodeType": "YulFunctionCall",
                          "src": "2420:22:33"
                        },
                        "variableNames": [
                          {
                            "name": "cs",
                            "nativeSrc": "2414:2:33",
                            "nodeType": "YulIdentifier",
                            "src": "2414:2:33"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "shanghai",
                  "externalReferences": [
                    {
                      "declaration": 11264,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2414:2:33",
                      "valueSize": 1
                    }
                  ],
                  "id": 11266,
                  "nodeType": "InlineAssembly",
                  "src": "2390:63:33"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 11269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 11267,
                      "name": "cs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11264,
                      "src": "2470:2:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 11268,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2476:1:33",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2470:7:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 11262,
                  "id": 11270,
                  "nodeType": "Return",
                  "src": "2463:14:33"
                }
              ]
            },
            "documentation": {
              "id": 11258,
              "nodeType": "StructuredDocumentation",
              "src": "1830:79:33",
              "text": "@dev Returns true if and only if the function is running in the constructor"
            },
            "id": 11272,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isConstructor",
            "nameLocation": "1924:13:33",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11259,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1937:2:33"
            },
            "returnParameters": {
              "id": 11262,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11261,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 11272,
                  "src": "1962:4:33",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 11260,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1962:4:33",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1961:6:33"
            },
            "scope": 11277,
            "src": "1915:570:33",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 11276,
            "mutability": "mutable",
            "name": "______gap",
            "nameLocation": "2587:9:33",
            "nodeType": "VariableDeclaration",
            "scope": 11277,
            "src": "2567:29:33",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 11273,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2567:7:33",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 11275,
              "length": {
                "hexValue": "3530",
                "id": 11274,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2575:2:33",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_50_by_1",
                  "typeString": "int_const 50"
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "2567:11:33",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "visibility": "private"
          }
        ],
        "scope": 11278,
        "src": "753:1847:33",
        "usedErrors": [],
        "usedEvents": []
      }
    ],
    "src": "0:2602:33"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.24+commit.e11b9ed9.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.16",
  "updatedAt": "2024-02-11T21:41:58.797Z",
  "devdoc": {
    "author": "Aave, inspired by the OpenZeppelin Initializable contract",
    "details": "Helper contract to support initializer functions. To use it, replace the constructor with a function that has the `initializer` modifier. WARNING: Unlike constructors, initializer functions must be manually invoked. This applies both to deploying an Initializable contract, as well as extending an Initializable contract via inheritance. WARNING: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or ensure that all initializers are idempotent, because this is not dealt with automatically as with constructors.",
    "kind": "dev",
    "methods": {},
    "stateVariables": {
      "initializing": {
        "details": "Indicates that the contract is in the process of being initialized."
      },
      "lastInitializedRevision": {
        "details": "Indicates that the contract has been initialized."
      }
    },
    "title": "VersionedInitializable",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}