{
  "contractName": "Initializable",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper contract to support initializer functions. To use it, replace the constructor with a function that has the `initializer` modifier. WARNING: Unlike constructors, initializer functions must be manually invoked. This applies both to deploying an Initializable contract, as well as extending an Initializable contract via inheritance. WARNING: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or ensure that all initializers are idempotent, because this is not dealt with automatically as with constructors.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"initialized\":{\"details\":\"Indicates that the contract has been initialized.\"},\"initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"title\":\"Initializable\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/libraries/openzeppelin-upgradeability/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"project:/contracts/libraries/openzeppelin-upgradeability/Initializable.sol\":{\"keccak256\":\"0xeb012399e2af382e9be33bd1c123fb530662ed2ea96bab9469f9800fe5be6f1e\",\"urls\":[\"bzz-raw://0bd3cb4057db03cfb8546b1e65e9e118fd35e7f1e6e802bdea55f44990acffde\",\"dweb:/ipfs/QmbmFB3P4JJLynqtLZGCTMfR2rHh546WKMMMmWeT2NaZwe\"]}},\"version\":1}",
  "bytecode": "0x608080604052346013576039908160188239f35b5f80fdfe5f80fdfea26469706673582212206b3e1c82e0a76d221aa03a49436b9c8a466c855d7ff36b322d76cf7782c18a3864736f6c63430008180033",
  "deployedBytecode": "0x5f80fdfea26469706673582212206b3e1c82e0a76d221aa03a49436b9c8a466c855d7ff36b322d76cf7782c18a3864736f6c63430008180033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "670:1531:28:-:0;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "670:1531:28:-:0;;",
  "source": "pragma solidity >=0.4.24 <0.9.0;\r\n\r\n/**\r\n * @title Initializable\r\n *\r\n * @dev Helper contract to support initializer functions. To use it, replace\r\n * the constructor with a function that has the `initializer` modifier.\r\n * WARNING: Unlike constructors, initializer functions must be manually\r\n * invoked. This applies both to deploying an Initializable contract, as well\r\n * as extending an Initializable contract via inheritance.\r\n * WARNING: When used with inheritance, manual care must be taken to not invoke\r\n * a parent initializer twice, or ensure that all initializers are idempotent,\r\n * because this is not dealt with automatically as with constructors.\r\n */\r\ncontract Initializable {\r\n    /**\r\n   * @dev Indicates that the contract has been initialized.\r\n   */\r\n    bool private initialized;\r\n\r\n    /**\r\n   * @dev Indicates that the contract is in the process of being initialized.\r\n   */\r\n    bool private initializing;\r\n\r\n    /**\r\n   * @dev Modifier to use in the initializer function of a contract.\r\n   */\r\n    modifier initializer() {\r\n        require(initializing || isConstructor() || !initialized, \"Contract instance has already been initialized\");\r\n\r\n        bool isTopLevelCall = !initializing;\r\n        if (isTopLevelCall) {\r\n            initializing = true;\r\n            initialized = true;\r\n        }\r\n\r\n        _;\r\n\r\n        if (isTopLevelCall) {\r\n            initializing = false;\r\n        }\r\n    }\r\n\r\n    /// @dev Returns true if and only if the function is running in the constructor\r\n    function isConstructor() private view returns (bool) {\r\n        // extcodesize checks the size of the code stored in an address, and\r\n        // address returns the current address. Since the code is still not\r\n        // deployed when running a constructor, any checks on its code size will\r\n        // yield zero, making it an effective way to detect if a contract is\r\n        // under construction or not.\r\n        uint256 cs;\r\n        //solium-disable-next-line\r\n        assembly {\r\n            cs := extcodesize(address())\r\n        }\r\n        return cs == 0;\r\n    }\r\n\r\n    // Reserved storage space to allow for layout changes in the future.\r\n    uint256[50] private ______gap;\r\n}\r\n",
  "sourcePath": "C:\\Proj\\fork-protocol\\contracts\\libraries\\openzeppelin-upgradeability\\Initializable.sol",
  "ast": {
    "absolutePath": "project:/contracts/libraries/openzeppelin-upgradeability/Initializable.sol",
    "exportedSymbols": {
      "Initializable": [
        10986
      ]
    },
    "id": 10987,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10920,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".24",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:28"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Initializable",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 10921,
          "nodeType": "StructuredDocumentation",
          "src": "36:632:28",
          "text": " @title Initializable\n @dev Helper contract to support initializer functions. To use it, replace\n the constructor with a function that has the `initializer` modifier.\n WARNING: Unlike constructors, initializer functions must be manually\n invoked. This applies both to deploying an Initializable contract, as well\n as extending an Initializable contract via inheritance.\n WARNING: When used with inheritance, manual care must be taken to not invoke\n a parent initializer twice, or ensure that all initializers are idempotent,\n because this is not dealt with automatically as with constructors."
        },
        "fullyImplemented": true,
        "id": 10986,
        "linearizedBaseContracts": [
          10986
        ],
        "name": "Initializable",
        "nameLocation": "679:13:28",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 10922,
              "nodeType": "StructuredDocumentation",
              "src": "700:71:28",
              "text": " @dev Indicates that the contract has been initialized."
            },
            "id": 10924,
            "mutability": "mutable",
            "name": "initialized",
            "nameLocation": "790:11:28",
            "nodeType": "VariableDeclaration",
            "scope": 10986,
            "src": "777:24:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 10923,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "777:4:28",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "documentation": {
              "id": 10925,
              "nodeType": "StructuredDocumentation",
              "src": "810:89:28",
              "text": " @dev Indicates that the contract is in the process of being initialized."
            },
            "id": 10927,
            "mutability": "mutable",
            "name": "initializing",
            "nameLocation": "918:12:28",
            "nodeType": "VariableDeclaration",
            "scope": 10986,
            "src": "905:25:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 10926,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "905:4:28",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 10965,
              "nodeType": "Block",
              "src": "1048:375:28",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 10937,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 10934,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 10931,
                            "name": "initializing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10927,
                            "src": "1067:12:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 10932,
                              "name": "isConstructor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10981,
                              "src": "1083:13:28",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                "typeString": "function () view returns (bool)"
                              }
                            },
                            "id": 10933,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1083:15:28",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "1067:31:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "id": 10936,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "1102:12:28",
                          "subExpression": {
                            "id": 10935,
                            "name": "initialized",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10924,
                            "src": "1103:11:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1067:47:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564",
                        "id": 10938,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1116:48:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9fbba6c4dcac9134893b633b9564f36435b3f927c1d5fa152c5c14b20cecb1a4",
                          "typeString": "literal_string \"Contract instance has already been initialized\""
                        },
                        "value": "Contract instance has already been initialized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9fbba6c4dcac9134893b633b9564f36435b3f927c1d5fa152c5c14b20cecb1a4",
                          "typeString": "literal_string \"Contract instance has already been initialized\""
                        }
                      ],
                      "id": 10930,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1059:7:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1059:106:28",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10940,
                  "nodeType": "ExpressionStatement",
                  "src": "1059:106:28"
                },
                {
                  "assignments": [
                    10942
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10942,
                      "mutability": "mutable",
                      "name": "isTopLevelCall",
                      "nameLocation": "1183:14:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 10965,
                      "src": "1178:19:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 10941,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1178:4:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10945,
                  "initialValue": {
                    "id": 10944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "1200:13:28",
                    "subExpression": {
                      "id": 10943,
                      "name": "initializing",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10927,
                      "src": "1201:12:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1178:35:28"
                },
                {
                  "condition": {
                    "id": 10946,
                    "name": "isTopLevelCall",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10942,
                    "src": "1228:14:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10956,
                  "nodeType": "IfStatement",
                  "src": "1224:99:28",
                  "trueBody": {
                    "id": 10955,
                    "nodeType": "Block",
                    "src": "1244:79:28",
                    "statements": [
                      {
                        "expression": {
                          "id": 10949,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 10947,
                            "name": "initializing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10927,
                            "src": "1259:12:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 10948,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1274:4:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1259:19:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 10950,
                        "nodeType": "ExpressionStatement",
                        "src": "1259:19:28"
                      },
                      {
                        "expression": {
                          "id": 10953,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 10951,
                            "name": "initialized",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10924,
                            "src": "1293:11:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 10952,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1307:4:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1293:18:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 10954,
                        "nodeType": "ExpressionStatement",
                        "src": "1293:18:28"
                      }
                    ]
                  }
                },
                {
                  "id": 10957,
                  "nodeType": "PlaceholderStatement",
                  "src": "1335:1:28"
                },
                {
                  "condition": {
                    "id": 10958,
                    "name": "isTopLevelCall",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10942,
                    "src": "1353:14:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10964,
                  "nodeType": "IfStatement",
                  "src": "1349:67:28",
                  "trueBody": {
                    "id": 10963,
                    "nodeType": "Block",
                    "src": "1369:47:28",
                    "statements": [
                      {
                        "expression": {
                          "id": 10961,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 10959,
                            "name": "initializing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10927,
                            "src": "1384:12:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 10960,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1399:5:28",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "1384:20:28",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 10962,
                        "nodeType": "ExpressionStatement",
                        "src": "1384:20:28"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 10928,
              "nodeType": "StructuredDocumentation",
              "src": "939:80:28",
              "text": " @dev Modifier to use in the initializer function of a contract."
            },
            "id": 10966,
            "name": "initializer",
            "nameLocation": "1034:11:28",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 10929,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1045:2:28"
            },
            "src": "1025:398:28",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10980,
              "nodeType": "Block",
              "src": "1569:517:28",
              "statements": [
                {
                  "assignments": [
                    10973
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10973,
                      "mutability": "mutable",
                      "name": "cs",
                      "nameLocation": "1942:2:28",
                      "nodeType": "VariableDeclaration",
                      "scope": 10980,
                      "src": "1934:10:28",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10972,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1934:7:28",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10974,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1934:10:28"
                },
                {
                  "AST": {
                    "nativeSrc": "2000:54:28",
                    "nodeType": "YulBlock",
                    "src": "2000:54:28",
                    "statements": [
                      {
                        "nativeSrc": "2015:28:28",
                        "nodeType": "YulAssignment",
                        "src": "2015:28:28",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "address",
                                "nativeSrc": "2033:7:28",
                                "nodeType": "YulIdentifier",
                                "src": "2033:7:28"
                              },
                              "nativeSrc": "2033:9:28",
                              "nodeType": "YulFunctionCall",
                              "src": "2033:9:28"
                            }
                          ],
                          "functionName": {
                            "name": "extcodesize",
                            "nativeSrc": "2021:11:28",
                            "nodeType": "YulIdentifier",
                            "src": "2021:11:28"
                          },
                          "nativeSrc": "2021:22:28",
                          "nodeType": "YulFunctionCall",
                          "src": "2021:22:28"
                        },
                        "variableNames": [
                          {
                            "name": "cs",
                            "nativeSrc": "2015:2:28",
                            "nodeType": "YulIdentifier",
                            "src": "2015:2:28"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "shanghai",
                  "externalReferences": [
                    {
                      "declaration": 10973,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "2015:2:28",
                      "valueSize": 1
                    }
                  ],
                  "id": 10975,
                  "nodeType": "InlineAssembly",
                  "src": "1991:63:28"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 10978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 10976,
                      "name": "cs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10973,
                      "src": "2071:2:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 10977,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2077:1:28",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2071:7:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 10971,
                  "id": 10979,
                  "nodeType": "Return",
                  "src": "2064:14:28"
                }
              ]
            },
            "documentation": {
              "id": 10967,
              "nodeType": "StructuredDocumentation",
              "src": "1431:79:28",
              "text": "@dev Returns true if and only if the function is running in the constructor"
            },
            "id": 10981,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isConstructor",
            "nameLocation": "1525:13:28",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10968,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1538:2:28"
            },
            "returnParameters": {
              "id": 10971,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10970,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10981,
                  "src": "1563:4:28",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10969,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1563:4:28",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1562:6:28"
            },
            "scope": 10986,
            "src": "1516:570:28",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 10985,
            "mutability": "mutable",
            "name": "______gap",
            "nameLocation": "2188:9:28",
            "nodeType": "VariableDeclaration",
            "scope": 10986,
            "src": "2168:29:28",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 10982,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2168:7:28",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 10984,
              "length": {
                "hexValue": "3530",
                "id": 10983,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2176:2:28",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_50_by_1",
                  "typeString": "int_const 50"
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "2168:11:28",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "visibility": "private"
          }
        ],
        "scope": 10987,
        "src": "670:1531:28",
        "usedErrors": [],
        "usedEvents": []
      }
    ],
    "src": "0:2203:28"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.24+commit.e11b9ed9.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.16",
  "updatedAt": "2024-02-11T21:41:58.783Z",
  "devdoc": {
    "details": "Helper contract to support initializer functions. To use it, replace the constructor with a function that has the `initializer` modifier. WARNING: Unlike constructors, initializer functions must be manually invoked. This applies both to deploying an Initializable contract, as well as extending an Initializable contract via inheritance. WARNING: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or ensure that all initializers are idempotent, because this is not dealt with automatically as with constructors.",
    "kind": "dev",
    "methods": {},
    "stateVariables": {
      "initialized": {
        "details": "Indicates that the contract has been initialized."
      },
      "initializing": {
        "details": "Indicates that the contract is in the process of being initialized."
      }
    },
    "title": "Initializable",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}